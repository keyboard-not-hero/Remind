正则表达式
BRE(用于grep和sed)
.	
    匹配任意单个字符(newline除外)

*	
    匹配前面的单个字符或子表达式0至多次

\?	
    匹配前面的单个字符或子表达式0或1次

\+	
    匹配前面的单个字符或子表达式1至多次

\{n\}
    匹配前面的单个字符或子表达式n次

\{n,\}
    匹配前面的单个字符或子表达式n次及以上

\{,m\}
    匹配前面的单个字符或子表达式m次及以下

\{n,m\}
    匹配前面的单个字符或子表达式n~m次

^    
    位于RE首个字符, 代表行起始

$    
    位于RE最后一个字符, 代表行结束

\`
    行起始, 在多行模式中区别于^

\'
    行结束, 在多行模式中区别于^

[...]    
    匹配[]内的任一字符. 特殊字符如下:
	1.-置于首位/末位时, 代表普通字符; 置于非首/末位时, 代表区间符号 
	2.^置于第一个位置有取反作用; 置于非第一个位置时, 代表普通字符
	3.]置于第一个位置时, 代表普通字符. 如果和^同时存在, 置于^之后
	4.$,*,.,[,\字符在其内没有特殊含义, 为普通字符
	5.字符集 - 系列字符集合名称. 如: [:alpha:]代表大小写字母
	6.排序字符 - 将多个字符序列视为一个字符单元. 如: [.ch.]将ch视为一个字符单元
	7.等价类 - 应视为等值的一系列字符. 如: [=e=]代表任何e和带有头部符号标注的e都相同

str1\|str2
    从两个字符串str1/str2中任选一个

\(\)
    子表达式

\<n>
    对子表达式的引用. 数字n的范围[1,9]
    额外的, 0代表对整个正则表达式的匹配

\<    
    单词起始位置

\>    
    单词结束位置



ERE(用于egrep和awk)
.	
    匹配任意单个字符(newline除外)

*	
    匹配前面的单个字符或子表达式0至多次

?	
    匹配前面的单个字符或子表达式0或1次

+	
    匹配前面的单个字符或子表达式1至多次

{n}
    匹配前面的单个字符或子表达式n次

{n,}
    匹配前面的单个字符或子表达式n至多次

{,m}
    匹配前面的单个字符或子表达式最多m次

{n,m}
    匹配前面的单个字符或子表达式n~m次

^    
    位于RE首个字符, 代表行起始

$    
    位于RE最后一个字符, 代表行结束

\`
    行起始, 在多行模式中区别于^

\'
    行结束, 在多行模式中区别于^

[...]    
    匹配[]内的任一字符. 特殊字符如下:
	1.-置于首位/末位时, 代表普通字符; 置于非首/末位时, 代表区间符号 
	2.^置于第一个位置有取反作用; 置于非第一个位置时, 代表普通字符
	3.]置于第一个位置时, 代表普通字符. 如果和^同时存在, 置于^之后
	4.$,*,.,[,\字符在其内没有特殊含义, 为普通字符
	5.字符集 - 系列字符集合名称. 如: [:alpha:]代表大小写字母
	6.排序字符 - 将多个字符序列视为一个字符单元. 如: [.ch.]将ch视为一个字符单元
	7.等价类 - 应视为等值的一系列字符. 如: [=e=]代表任何e和带有头部符号标注的e都相同

str1|str2
    从两个字符串str1/str2中任选一个

()
    子表达式

\<n>
    对子表达式的引用. 数字n的范围[1,9]
    额外的, 0代表对整个正则表达式的匹配

\<    
    单词起始位置

\>    
    单词结束位置
