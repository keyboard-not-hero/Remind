crond - 执行周期例程的守护进程

语法
crond [option]

参数释义
-c    添加集群支持

-d    关闭inotify支持。crond检查crontab例程有如下方式
  1.modtime - 后期性检查/etc/crontab.<period>|/etc/cron.d|/var/spool/cron等文件的modify time
  2.inotify - 根据/var/log/cron文件内容来检查

-h    帮助信息

-m <program>    使用一个邮件程序代替默认的sendmail。program为off代表关闭邮件发送

-n    在前台运行crond。须关闭/etc/pam.d/crond内的pam_loginuid.so

-p    允许任何用户配置crontab

-P    不使用PATH。PATH继承自环境

-s    使用syslog输出结果。默认为mail    

-x    允许配置debug标志

crontab有两种用法：
一、用户级配置，使用指令crontab
crontab - 不同用户的周期性例程

语法
crontab [option]

参数：
-c    查询集群中的哪台主机执行crontab。只适用于cron使用-c启动时

-e    添加用户crontab

-i    结合-r使用，在删除crontab时提示

-l    罗列当前crontab任务

-n [host_name]    用于设定集群中的指定主机执行crontab。只适用于cron使用-c启动，即开启集群支持时。host_name默认为本地主机

-r    删除用户的全部crontab

-s    将当前SELinux上下文赋值给MLS_LEVEL变量，并应用到到crontab文件

-u    为指定用户使用crontab，只有root有权限使用

crontab配置格式：
分  时  日期  月份  星期 指令

五个时间段特殊符号含义：
*：任意匹配

,：多个时间点匹配

-：时间段匹配

/n：每隔n个单位时间匹配

配置保存路径(使用指令，不要直接编辑)：
/var/spool/cron

指定可使用crontab指令用户：/etc/cron.allow、/etc/cron.deny
1.当只有cron.allow存在，只有在文件当中的用户可使用crontab指令
2.当只有cron.deny存在，只有不在文件当中的用户可使用crontab指令
3.当两者皆不存在，只有root有权限使用crontab指令

二、系统级配置，编辑/etc/crontab
配置格式：
分  时  日期  月份  星期 指令执行者 指令


anacron - 每小时被cron执行，以恢复本该在停机期间执行的周期性例程

语法
anacron [option] [job]

参数释义
-d    不在后台执行，错误信息同时输出信息到stderr和syslog，访问信息通过mail发送。默认为后台执行，输出信息到syslog和mail

-f    强制执行/etc/cron.<period>的周期性例程，不进行检查。period为daily|weekly|monthly

-h    帮助信息

-n    忽略/etc/anacrontab文件内的delay配置。隐式包含-s

-q    不允许输出信息到stderr，配置配合-d使用

-s    串行执行多个例程。即在同一个进程内顺序执行daily/weekly/monthly例程，默认为多进程

-S <spooldir>    指定时间戳的保存位置。替换默认的/etc/spool/anacron

-t <anacrontab>    执行指定的配置文件。代替默认的/etc/anacrontab

-T    验证/etc/anacrontab语法

-u    将/var/spool/anacron下所有文件内的时间戳进行更新。但不执行周期性例程

-V    版本信息


anacron原理：
1.在/etc/cron.hourly下，0anacron被周期调用，当/etc/cron.daily的时间戳为当天之前，则执行anacron
2.anacron根据/etc/anacrontab配置，将/var/spool/anacron/cron.<period>文件内的时间戳与当前时间作比对
3.当对应文件的时间差对于/etc/anacrontab的允许时间差时，执行配置文件内的对应指令
