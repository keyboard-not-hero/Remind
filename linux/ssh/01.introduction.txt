SSH(Secure Shell Protocol, 安全外壳协议) - 一种加密的网络协议, 通过在网络中创建安全隧道来实现端到端的连接


前提须知
1.目前主要使用的为SSH的开源实现OpenSSH

2.OpenSSH采用server/client架构

3.作为远程登录工具

4.作为端口转发工具


登录认证方式:
1.口令认证

2.公钥认证


具体认证方式实现:
1)口令认证流程:
1.客户端发起登录请求

2.服务器端发送指定公钥(/etc/ssh/ssh_host_ecdsa_key.pub)

3.分为两种情况:
(1)第一次登录服务器 - 客户端发起质询, 显示服务器发送公钥的指纹, 人工确定是否与目标服务器公钥指纹匹配, 确定后将公钥保存在客户端(~/.ssh/known_hosts)
ssh-keygen -l -f /etc/ssh/ssh_host_ecdsa_key.pub
(2)非第一次登录服务器 - 直接将公钥内容与客户端known_hosts文件entry内容匹配, 如果没有找到匹配项, 断开连接, 进行风险提示; 找到匹配项则进入下一步
** 删除known_hosts中指定服务器的公钥
**     ssh-keygen -R <hostname>

4.客户端请求输入服务器对应账号的密码, 并发送

5.服务器验证密码, 错误则提示重新输入; 正确则登录成功


2)公钥认证流程:
1.客户端生成密钥
ssh-keygen

2.将客户端公钥添加到服务器端文件(~/.ssh/authorized_keys, 注意该文件权限必须为644)

3.客户端向服务器发起登录请求

4.服务器生成一段内容, 发送给客户端

5.客户端使用私钥加密, 返回给服务器

6.服务器使用公钥解密, 确认客户端已授权


端口转发类型:
1.动态转发 - 监听client本地指定端口, 将该端口的请求发送到SSH服务器, 随后SSH服务器执行原请求操作
** 本地监听接口使用socks5协议
**     socks5://localhost:<port>

应用图解:
                         ---------------------
client --> web   ====>   client --> SSH server --> web
                         ---------------------

2.本地转发 - SSH服务器作为中介跳板机, 为本地指定端口与目标构建加密隧道

应用图解:
                          -----------------------------    
client --> web   ====>    client --> SSH server --> web
                          -----------------------------

3.远程转发 - 将发送到SSH服务器的请求, 返回到本地主机

应用图解
                --------------------- 
remote_host --> SSH server --> client
                ---------------------
