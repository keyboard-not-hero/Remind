chmod - 修改文件的权限

语法
chmod [option] <mode> file

参数释义
-c, --changes
	类似于verbose模式, 但只有group修改时进行提示

-f, --silent, --quiet
	quiet模式

-v, --verbose
	verbose模式

--reference=<refer_file>
	引用其他文件的权限

-R, --recursive
	对目录递归修改权限

--help
	帮助文档

--version
	版本信息

** chmod会自动解引用, 修改软链接实际指向的文件其权限


mode格式
1.[ugoa][+-=]<perm1>[,<perm2>...]
ugoa字段:
u - 文件所属用户
g - 文件所属用户组
o - 其他用户
a - 所有用户

+-=字段:
+ - 为指定用户在原来的基础上添加权限
- - 为指定用户在原来的基础上删减权限
= - 忽视用户原来权限, 直接赋予用户指定权限

perm字段:
r - 文件的读权限(文件夹的文件/子目录列表)
w - 文件的写权限(文件夹内文件/子目录添加或删除或重命名)
x - 文件的可执行权限(文件夹是否可进入)
s - 文件的SUID或SGID
t - 文件的SBIT

2.[[[0~7]0~7]0~7]0~7
最后一个字段:
4 - others的读权限
2 - others的写权限
1 - others的可执行权限

第三个字段:
4 - group的读权限
2 - group的写权限
1 - group的可执行权限

第二个字段:
4 - owner的读权限
2 - owner的写权限
1 - owner的可执行权限

第一个字段:
4 - SUID
2 - SGID
1 - SBIT
** 未提供字段的值, 默认为0


特殊权限
SUID(Set UID)
	作用于档案拥有者的x权限上, 形如: -rwsr-xr-x. 功能如下:
		档案
		1.仅对可执行程序有效
		2.执行者需要对程序具有可执行权限(x)
		3.仅在执行该程序时有效
		4.执行者具有该owner的权限
		示例程序: /usr/bin/passwd
		读取配置文件: /etc/shadow

GUID(Set GID)
	作用于档案所属组的x权限上, 形如: -rwxr-sr-x. 功能如下:
		档案
		1.对可执行程序有效
		2.执行者需要对程序具有可执行权限(x)
		3.仅在执行该程序时有效
		4.执行者获取群组支持
		示例程序: /usr/bin/locate
		读取配置文件: /var/lib/mlocate/mlocate.db

		目录
		1.使用者对目录具有r与x权限
		2.使用者的有效群组隐式切换为目录所属群组(若使用者在该目录下具有w权限, 则创建的文件所属组为目录所属组)
		3.使用者可以不属于目录所属组, 额外添加对该群组的支持

SBIT(Sticky Bit)
	作用于others的x权限上, 形如: drwxrwxrwt. 功能如下:
		目录
		1.使用者对目录具有w/x权限
		2.当使用者在该目录下建立子目录/文件时, 只有自己与root能删除
		示例目录: /tmp
