/<pattern>
?<pattern>


pattern:
\c<alphanum_literal>
    代表大小写不敏感
    覆盖:set ignorecase相关配置

\C<alphanum_literal>
    代表大小写敏感
    覆盖:set ignorecase相关配置

:set wrapscan
查找到底部(顶部)后, 返回顶部(底部)继续查找

:set nowrapscan
查找到底部(顶部)后, 停止查找

/<pattern>/<n>
前进偏移到匹配内容之后的第n行行首
n可以为正数或负数, 为正数时, 仅能使用n快捷键进行正向反复查找; 为负数时, 仅能使用N快捷键进行反向反复查找

?<pattern>?<n>
后退偏移到匹配内容之后的第n行行首
n可以为正数或负数, 为正数时, 仅能使用N快捷键进行反向反复查找; 为负数时, 仅能使用n快捷键进行正向反复查找

/<pattern>/b+<n>
前进移动到匹配单词的第一个字母, 并向右移n个字母

?<pattern>?b+<n>
后退移动到匹配单词的第一个字母, 并向右移n个字母

/<pattern>/e+<n>
前进移动到匹配单词的最后一个字母, 并向右移n个字母

?<pattern>?e+<n>
后退移动到匹配单词的最后一个字母, 并向右移n个字母

/
根据上一次使用的/<pattern>/b或者/<pattern>/e偏移内容, 进行前进查找

?
根据上一次使用的?<pattern>?b或者?<pattern>?e偏移内容, 进行后退查找

//
移除上一次使用的/<pattern>/b或者/<pattern>/e的偏移, 转化为/<pattern>

??
移除上一次使用的?<pattern>?b或者?<pattern>?e的偏移, 转化为?<pattern>

/a*
/\(ab\)*
*之前, 并且紧邻*的字符或分组\(\)重复0或多次

/a\+
/\(ab\)+
+之前, 并且紧邻+的字符或分组重复1或多次

/a\=
/\(ab\)\=
=之前, 并且紧邻=的字符或分组出现0或1次

/ab\{2}
{之前, 并且紧邻{的字符或分组重复重复2次

/ab\{n,m}
{之前, 并且紧邻{的字符或分组重复重复n到m次
n省略时, 代表0
m省略时, 代表infinity

/ab\{-n,m}
{之前, 并且紧邻{的字符或分组重复重复n到m次(惰性匹配)
只有该模式为惰性匹配, 其他都为尽可能多的匹配

/<str1>\|<str2>
匹配str1或者str2
例: /\(foo\|bar\)\+, 可匹配"foo"、"foobar"、"foofoo"、"barfoobar"


------------------------------------------
/[a-z]
匹配从a-z序列内的任意单个字符
如果需要匹配'-'字符, 可以作为[]内的首个或末尾字符

预定义字符范围
item          meaning           equivalent
\a            alphabetic        [A-Za-z]
\A            non-alphabetic    [^A-Za-z]
\d            digit             [0-9]
\D            non-digit         [^0-9]
\h            head of word      [A-Za-z_]
\H            non-head of word  [^A-Za-z_]
\l            lowercase         [a-z]
\L            non-lowercase     [^a-z]
\o            octal digit       [0-7]
\O            non-octal digit   [^0-7]
\s            whitespace        [ ]
              (space and tab)
\S            non-whitespace    [^ ]
\u            uppercase         [A-Z]
\U            non-uppercase     [^A-Z]
\w            word              [0-9A-Za-z_]
\W            non-word          [0-9A-Za-z_]
\x            hex digit         [0-9A-Fa-f]
\X            non-hex digit     [^0-9A-Fa-f]
** 预定义比直接指定[]运行更快. 如: \a速度快于[a-zA-Z]
------------------------------------------


/[^0-9]
从所有字符中(数字除外)匹配单个字符

/\<\h\w*\>
\<代表单词开始, \>代表单词结束


special charactor list:
item           meaning
\n             line_break
\_a            alphabetic or line_break
\_s            space or line_break
** []的所有预定义ite都可以在\后添加_, 作为添加line_break含义


最后编辑于: 2024-01-17
