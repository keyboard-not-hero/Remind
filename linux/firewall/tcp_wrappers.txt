tcp_wrappers用于对tcp服务进行访问控制，防止无聊之人通过remote control服务搞破坏，守护进程为tcpd

设置方法(文件内容不进入cache，修改立即生效)：

1.首先，查看/etc/hosts.allow文件，如果包含，则给予访问权限(停止往下)，否则继续；


2.然后，查看/etc/hosts.deny文件，如果包含，则拒绝访问(停止往下)，否则继续；

3.如果allow和deny文件均不包含，则默认予以访问

语法：

daemon_name:client_name[:optional]


实战演练(服务器192.168.1.5，客户端192.168.1.3)：

1.初次下场，牛刀小试：

查看是否支持tcp_wrappers，链接到libwrap.so.0库
[root@dataforthompson log]# ldd $(which sshd)|grep libwrap
libwrap.so.0 => /lib64/libwrap.so.0 (0x00007f8ba917f000)

[root@dataforthompson log]# cat >>/etc/hosts.deny<<EOF
sshd:192.168.1.3
EOF

#客户端连接操作测试
[root@guest log]# ssh 192.168.1.5
ssh_exchange_identification: read: Connection reset by peer
#连接失败

2.测试allow与deny文件权重：

[root@dataforthompson log]# cat >>/etc/hosts.allow<<EOF
sshd:192.168.1.3
EOF

#客户端连接操作测试
[root@guest log]# ssh 192.168.1.5
root@192.168.1.250's password:
#成功

3.进阶测试(shell command与log)：

#删除allow添加项，阻止客户端登入
[root@dataforthompson log]# vi /etc/hosts.allow

#spawn:服务器开启子进程，在其中执行后续指令
[root@dataforthompson log]# vi /etc/hosts.deny
sshd:192.168.1.3    #修改前
sshd:192.168.1.250:spawn (/bin/echo `/bin/date` deny access %a>>/var/log/ssh.log)  #修改后

#客户端连接测试
[root@guest log]# ssh 192.168.1.5
ssh_exchange_identification: read: Connection reset by peer
#连接失败

#auth log文件/var/log/secure
[root@dataforthompson log]# cat /var/log/secure
May 1 16:01:07 dataforthompson sshd[31567]: refused connect from 192.168.1.250 (192.168.1.250)

#daemon log文件
[root@dataforthompson log]# cat /var/log/ssh.log
Tue May 1 16:01:07 CST 2018 deny access 192.168.1.250

shell command参数列表:
%a — 客户端IP
%A — 服务器IP
%c — user+hostname(user+ip)
%d — 连线守护进程名称
%h — 客户端hostname(或ip)
%H — 服务器hostname(或ip)
%n — 客户端hostname(或unknown)
%N —服务器hostname(或unknown)
%p — 返回守护进程PID
%s —守护进程@hostname形式
%u — 客户端username(或unknown)
