从package安装
1.CentOS(nginx from package)
1)添加remi源
[root@vultr ~]# yum install https://mirror.usi.edu/pub/remi/enterprise/remi-release-7.rpm
** 源镜像列表: https://rpms.remirepo.net/

2)安装php8.1
[root@vultr ~]# yum install yum-utils

[root@vultr ~]# yum-config-manager --enable remi-php81

[root@vultr ~]# yum install php php-devel php-fpm php-mysqlnd

3)修改php-fpm process的owner/group
[root@vultr ~]# vi /etc/php-fpm.d/www.conf
user = nginx
group = nginx

4)启动php-fpm
[root@vultr ~]# systemctl start php-fpm

[root@vultr ~]# systemctl enable php-fpm

5)添加nginx对php支持
[root@vultr ~]# vi /etc/nginx/conf.d/default.conf
#修改如下内容
location / {
    root /usr/share/nginx/html;
    index index.php index.html index.htm;
}

#将以下内容取消注释, 并修改
location ~ \.php$ {
    root /usr/share/nginx/html;
    fastcgi_pass 127.0.0.1:9000;
    fastcgi_index index.php;
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include fastcgi_params;
}

6)重启web server(nginx)
[root@vultr nginx]# systemctl restart nginx

7)验证安装结果
[root@vultr ~]# vi /usr/share/nginx/html/index.php
<?php
   phpinfo();
?>

**浏览器栏输入<server_ip>/index.php, 测试是否出现php欢迎界面


2.CentOS(nginx from source code)
1)添加remi源
[root@vultr ~]# yum install https://mirror.usi.edu/pub/remi/enterprise/remi-release-7.rpm
** 源镜像列表: https://rpms.remirepo.net/

2)安装php8.1
[root@vultr ~]# yum install yum-utils

[root@vultr ~]# yum-config-manager --enable remi-php81

[root@vultr ~]# yum install php php-devel php-fpm php-mysqlnd

3)修改php-fpm process的owner/group, 并创建用户
[root@vultr ~]# vi /etc/php-fpm.d/www.conf
user = nginx
group = nginx

[root@vultr ~]# useradd nginx -s /sbin/nologin -d /var/cache/nginx

4)启动php-fpm
[root@vultr ~]# systemctl start php-fpm

[root@vultr ~]# systemctl enable php-fpm

5)添加nginx对php支持
[root@vultr ~]# vi /usr/local/nginx/conf/nginx.conf
user nginx;
#修改如下内容
location / {
    root   html;
    index index.php index.html index.htm;
}

#将以下内容取消注释, 并修改
location ~ \.php$ {
    root   html;
    fastcgi_pass 127.0.0.1:9000;
    fastcgi_index index.php;
    # if nginx build from source, take care the $document_root    
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include fastcgi_params;
}

6)重启web server
[root@vultr ~]# nginx -s reload

7)验证安装结果
[root@vultr ~]# vi /usr/local/nginx/html/index.php
<?php
   phpinfo();
?>

**浏览器栏输入<server_ip>/index.php, 测试是否出现php欢迎界面


3.Ubuntu(nginx from package)
# 添加PPA源
steven@steven-MSI:~$ sudo apt-get install software-properties-common

steven@steven-MSI:~$ sudo add-apt-repository ppa:ondrej/php

** PPA源查找: https://launchpad.net/~ondrej

steven@steven-MSI:~$ sudo apt-get update

# 安装php8.1
steven@steven-MSI:~$ sudo apt-get install php8.1 php8.1-dev php8.1-fpm php8.1-mysql

# 启动php-fpm
steven@steven-MSI:~$ sudo systemctl start php8.1-fpm

steven@steven-MSI:~$ sudo systemctl enable php8.1-fpm

# 修改nginx配置，将.php文件传递给php执行
steven@steven-MSI:~$ sudo vi /etc/nginx/sites-enabled/default
# 索引文件添加index.php，用于对php支持
index index.html index.htm index.nginx-debian.html index.php;

# 将以下内容解除注解
location ~ \.php$ {
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    include snippets/fastcgi-php.conf;
}

steven@steven-MSI:~$ sudo systemctl restart nginx

steven@steven-MSI:~$ sudo vi /var/www/html/index.php
<?php
    phpinfo();
?>

**浏览器栏输入remote_ip/index.php，测试是否出现php欢迎界面


4.Ubuntu(nginx from source)
# 添加PPA源
steven@steven-MSI:~$ sudo apt-get install software-properties-common

steven@steven-MSI:~$ sudo add-apt-repository ppa:ondrej/php

** PPA源查找: https://launchpad.net/~ondrej

steven@steven-MSI:~$ sudo apt-get update

# 安装php8.1
steven@steven-MSI:~$ sudo apt-get install php8.1 php8.1-dev php8.1-fpm php8.1-mysql

# 启动php-fpm
steven@steven-MSI:~$ sudo systemctl start php8.1-fpm

steven@steven-MSI:~$ sudo systemctl enable php8.1-fpm

# 修改nginx配置，将.php文件传递给php执行
steven@steven-MSI:~$ sudo vi /usr/local/nginx/conf/nginx.conf
# 修改user
user www-data;

# 索引文件添加index.php，用于对php支持
location / {
    root   html;
    index  index.php index.html index.htm;
}

# 将以下内容解除注解
location ~ \.php$ {
    root           html;
    fastcgi_pass   unix:/run/php/php8.1-fpm.sock;
    fastcgi_index  index.php;
    # if nginx build from source, take care the $document_root
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include        fastcgi_params;
}

steven@steven-MSI:~$ sudo nginx -s reload

steven@steven-MSI:~$ sudo vi /usr/local/nginx/html/index.php
<?php
    phpinfo();
?>

**浏览器栏输入remote_ip/index.php，测试是否出现php欢迎界面



从source code编译安装
1.CentOS(nginx from package)
1)下载php
[root@vultr ~]# curl -O https://www.php.net/distributions/php-8.1.8.tar.gz

2)依赖环境
依赖软件列表: libxml2/sqlite3/zlib/bzip2/libcurl/gcc/make/web server(nginx/apacha等)
[root@vultr ~]# yum install libxml2-devel sqlite-devel zlib-devel bzip2-devel libcurl-devel gcc make

3)编译安装
[root@vultr ~]# tar -zxvf php-8.1.8.tar.gz -C /tmp

[root@vultr ~]# cd /tmp/php-8.1.8

[root@vultr ~]# ./configure --enable-fpm --with-mysqli --with-pdo-mysql --with-zlib --with-bz2 --with-curl

[root@vultr ~]# make

[root@vultr ~]# sudo make install

4)配置文件准备
[root@vultr ~]# cp php.ini-development /usr/local/lib/php.ini

[root@vultr ~]# cp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf

[root@vultr ~]# cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf

5)php配置
[root@vultr ~]# vi /usr/local/lib/php.ini
cgi.fix_pathinfo=0
mysqli.default_socket = /var/lib/mysql/mysql.sock
pdo_mysql.default_socket=/var/lib/mysql/mysql.sock

6)php-fpm配置
[root@vultr ~]# vi /usr/local/etc/php-fpm.conf
143gg
include=etc/php-fpm.d/*conf

[root@vultr ~]# vi /usr/local/etc/php-fpm.d/www.conf
user = nginx
group = nginx

[root@vultr ~]# php-fpm

7)配置nginx支持php, 并重启nginx
[root@vultr ~]# vi /etc/nginx/conf.d/default.conf
server{
    location / {
        root /usr/share/nginx/html;
        index index.php index.html index.htm;
    }
    location ~ \.php$ {
        root /usr/share/nginx/html;
        fastcgi_index index.php;
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    }
}

[root@vultr ~]# systemctl restart nginx

8)创建测试文件
[root@vultr ~]# vi /usr/share/nginx/html/index.php
<?php
    phpinfo();
?>


2.CentOS(nginx from source code)
1)下载php
[root@vultr ~]# curl -O https://www.php.net/distributions/php-8.1.8.tar.gz

2)依赖环境
依赖软件列表: libxml2/sqlite3/zlib/bzip2/libcurl/gcc/make/web server(nginx/apacha等)
[root@vultr ~]# yum install libxml2-devel sqlite-devel zlib-devel bzip2-devel libcurl-devel gcc make

3)编译安装
[root@vultr ~]# tar -zxvf php-8.1.8.tar.gz -C /tmp

[root@vultr ~]# cd /tmp/php-8.1.8

[root@vultr ~]# ./configure --enable-fpm --with-mysqli --with-pdo-mysql --with-zlib --with-bz2 --with-curl

[root@vultr ~]# make

[root@vultr ~]# sudo make install

4)配置文件准备
[root@vultr ~]# cp php.ini-development /usr/local/lib/php.ini

[root@vultr ~]# cp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf

[root@vultr ~]# cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf

5)php配置
[root@vultr ~]# vi /usr/local/lib/php.ini
cgi.fix_pathinfo=0
mysqli.default_socket = /var/lib/mysql/mysql.sock
pdo_mysql.default_socket=/var/lib/mysql/mysql.sock

6)php-fpm配置
[root@vultr ~]# vi /usr/local/etc/php-fpm.conf
143gg
include=etc/php-fpm.d/*conf

[root@vultr ~]# vi /usr/local/etc/php-fpm.d/www.conf
user = nginx
group = nginx

[root@vultr ~]# useradd nginx -s /sbin/nologin -d /var/cache/nginx

[root@vultr ~]# php-fpm

7)配置nginx支持php, 并重启nginx
[root@vultr ~]# vi /usr/local/nginx/conf/nginx.conf
user nginx;
server{
    location / {
        root html;
        index index.php index.html index.htm;
    }
    location ~ \.php$ {
        root html;
        fastcgi_index index.php;
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
        # if nginx build from source, take care the $document_root
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    }
}

[root@vultr ~]# nginx -s reload

8)创建测试文件
[root@vultr ~]# vi /usr/local/nginx/html/index.php
<?php
    phpinfo();
?>


3.Ubuntu(nginx from package)
1)下载php
steven@steven-MSI:~$ curl -O https://www.php.net/distributions/php-8.1.8.tar.gz

2)依赖环境
依赖软件列表: libxml2/sqlite3/zlib/bzip2/libcurl/gcc/make/web server(nginx/apacha等)
steven@steven-MSI:~$ sudo apt install libxml2-dev libsqlite3-dev zlib1g-dev libbz2-dev libcurl4-openssl-dev gcc make

3)编译安装
steven@steven-MSI:~$ tar -zxvf php-8.1.8.tar.gz -C /tmp

steven@steven-MSI:~$ cd /tmp/php-8.1.8

steven@steven-MSI:~$ ./configure --enable-fpm --with-mysqli --with-pdo-mysql --with-zlib --with-bz2 --with-curl

steven@steven-MSI:~$ make

steven@steven-MSI:~$ sudo make install

4)配置文件准备
steven@steven-MSI:~$ cp php.ini-development /usr/local/lib/php.ini

steven@steven-MSI:~$ cp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf

steven@steven-MSI:~$ cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf

5)php配置
steven@steven-MSI:~$ vi /usr/local/lib/php.ini
cgi.fix_pathinfo=0
mysqli.default_socket = /var/run/mysqld/mysqld.sock
pdo_mysql.default_socket = /var/run/mysqld/mysqld.sock

6)php-fpm配置
steven@steven-MSI:~$ vi /usr/local/etc/php-fpm.conf
143gg
include=etc/php-fpm.d/*conf

steven@steven-MSI:~$ vi /usr/local/etc/php-fpm.d/www.conf
user = www-data
group = www-data

steven@steven-MSI:~$ php-fpm

7)nginx对php的支持
steven@steven-MSI:~$ vi /etc/nginx/sites-enabled/default
# 索引文件添加index.php，用于对php支持
index index.html index.htm index.nginx-debian.html index.php;

# 将以下内容解除注解
location ~ \.php$ {
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    include snippets/fastcgi-php.conf;
}

steven@steven-MSI:~$ systemctl restart nginx

8)测试php
steven@steven-MSI:~$ vi /var/www/html/index.php
<?php
    phpinfo();
?>


4.Ubuntu(nginx from source code)
1)下载php
steven@steven-MSI:~$ curl -O https://www.php.net/distributions/php-8.1.8.tar.gz

2)依赖环境
依赖软件列表: libxml2/sqlite3/zlib/bzip2/libcurl/gcc/make/web server(nginx/apacha等)
steven@steven-MSI:~$ sudo apt install libxml2-dev libsqlite3-dev zlib1g-dev libbz2-dev libcurl4-openssl-dev gcc make

3)编译安装
steven@steven-MSI:~$ tar -zxvf php-8.1.8.tar.gz -C /tmp

steven@steven-MSI:~$ cd /tmp/php-8.1.8

steven@steven-MSI:~$ ./configure --enable-fpm --with-mysqli --with-pdo-mysql --with-zlib --with-bz2 --with-curl

steven@steven-MSI:~$ make

steven@steven-MSI:~$ sudo make install

4)配置文件准备
steven@steven-MSI:~$ sudo cp php.ini-development /usr/local/lib/php.ini

steven@steven-MSI:~$ sudo cp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf

steven@steven-MSI:~$ sudo cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf

5)php配置
steven@steven-MSI:~$ sudo vi /usr/local/lib/php.ini
cgi.fix_pathinfo=0
mysqli.default_socket = /var/run/mysqld/mysqld.sock
pdo_mysql.default_socket = /var/run/mysqld/mysqld.sock

6)php-fpm配置
steven@steven-MSI:~$ sudo vi /usr/local/etc/php-fpm.conf
143gg
include=etc/php-fpm.d/*conf

steven@steven-MSI:~$ sudo vi /usr/local/etc/php-fpm.d/www.conf
user = www-data
group = www-data
listen = 127.0.0.1:9000

steven@steven-MSI:~$ sudo php-fpm

7)nginx对php的支持
steven@steven-MSI:~$ sudo vi /usr/local/nginx/conf/nginx.conf
#修改user
user www-data;

# 索引文件添加index.php，用于对php支持
location / {
root  html;
index index.html index.htm index.php;
}

# 将以下内容解除注解
location ~ \.php$ {
    root           html;
    # fastcgi_pass需要与php-fpm配置文件的listen一致(sock或ip:port)
    fastcgi_pass   127.0.0.1:9000;
    fastcgi_index  index.php;
    # if nginx build from source, take care the $document_root
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include        fastcgi_params;
}

steven@steven-MSI:~$ sudo nginx -s reload

8)测试php
steven@steven-MSI:~$ sudo vi /usr/local/nginx/html/index.php
<?php
    phpinfo();
?>


最后编辑于: 2022-08-23
