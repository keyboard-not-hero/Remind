目录：
/usr/lib/systemd/system:通过rpm安装，并可由systemd进行管理的软件启动script。不推荐手动添加文件
/etc/systemd/system:当前runlevel级别及该runlevel的启动配置
/run/systemd/system:当前runtime unit内容

文件后缀：
service：代表可运行程序
target：代表系统单元组，SysV runlevel替代方案
mount：文件系统挂载点

service应用：
1.启动软件
systemctl start <name>[.service]
2.终止软件
systemctl stop <name>[.service]
3.重启软件
systemctl restart <name>[.service]
4.重启软件(前提软件正在运行)
systemctl try-restart <name>[.service]
5.重新加载配置文件
systemctl reload <name>[.service]
6.查看软件状态
systemctl status <name>[.service]
7.所有软件启动状态列表(--all可罗列未加载的软件)
systemctl list-units --type service [--all]
8.软件开机自启
systemctl enable <name>[.service]
9.软件开机不自启
systemctl disable <name>[.service]
10.禁止启动软件
systemctl mask <name>[.service]
11.关闭禁止启动
systemctl unmask <name>[.service]
12.所有软件开机自启状态列表
systemctl list-unit-files --type service
13.指定软件启动之后跟随启动的软件
systemctl list-dependencies --before <name>[.service]

target应用：
Runlevel    Target Units
0           runlevel0.target,poweroff.target
1           runlevel1.target,rescue.target
2           multi-user.target
3           multi-user.target
4           multi-user.target
5           graphical.target
6           reboot.target
1.当前启动的target(--all加载target)
systemctl list-units --type target [--all]
2.修改当前runlevel
systemctl isolate <name.target>
3.获取默认runlevel
systemctl get-default
4.配置默认runlevel
systemctl set-default <name.target>
5.进入紧急救援模式(--no-wall不对登录的用户进行通知)
systemctl rescue [--no-wall]

电源管理：
1.关闭系统
systemctl [--no-wall] poweroff
2.停止运行
systemctl halt
3.重启系统
systemctl restart
4.暂停运行(运行状态保存在内存中)
systemctl suspend
5.系统休眠(运行状态保存在硬盘中)
systemctl hibernate
6.暂停和休眠模式
systemctl hybrid-sleep

远程管理(通过ssh)：
systemctl --host <user_name>@<host_name> <command>

启动script样本：
1.[unit]：与单元类型无关选项
  Description--单元描述，出现在systemctl status描述
  Documentation--doc引用URI列表(空格分割item)
  After--本unit只在指定unit启动之后才启动
  before--与after相对
  Requires--本unit与指定unit list一起启动，如unit list中有unit启动失败，则本unit无法启动
  Wants--本unit与指定unit list一起启动，如unit list中有unit启动失败，本unit无影响
  Conflicts--当指定unit启动，则本unit无法启动(发生冲突)
  **参考systemd.unit(5)手册
2.[<unit_type>]：与单元类型相关的选项
  Type--启动类型
    simple：默认类型，ExecStart启动服务的主进程
    forking：ExecStart调用fork()派生子进程，子进程启动完毕后，父进程关闭，当前进程成为主进程
    oneshot：类似于simple。但ExecStart再次启动进程之前，旧进程即刻关闭
    dbus：类似于simple。但ExecStart再次启动进程之前，旧进程必须获得dbus name。需配合BusName使用
    notify：类似于simple。但ExecStart再次启动进程之前，旧进程必须发送出notification
    idle：类似于simple。但ExecStart再次启动进程之前，旧进程必须完成所有工作
  ExecStart--单元启动指令(绝对路径，不依赖PATH)及参数
  ExecStartPre--单元启动之前执行的其他指令，语法类似于ExecStart
  ExecStartPost--单元启动之后执行的其他指令，语法类似于ExecStart
  ExecStop--单元关闭指令(绝对路径，不依赖PATH)及参数
  ExecReload--配置文件重新加载指令(绝对路径，不依赖PATH)及参数
  Restart--当单元意外关闭(不包括systemctl stop|restart)或超时，是否重启单元
    no：默认类型，不进行重启
    on-success：exit code=0或者由SIGHUB/SIGINT/SIGPIPE/SIGTERM信号中断时重启
      **SIGHUB:控制终端故障或父进程终止
      **SIGINT:键盘中断
      **SIGPIPE:管道异常
      **SIGTERM:正常终止信号
    on-failure：exit code!=0或者core dump类型signal或者time out时重启
    on-abnormal：core dump类型signal或者time out时重启
    on-watchdog：watchdog time out时重启
    on-abort：被不明信号中断时重启
    always：意外关闭或超时，重启
  RestartRec--重启之前等待的时间，默认单位为s，默认时间为100ms
  **参考systemd.service(5)手册
3.[install]：与启动相关的选项
  Alias：本unit别名列表，space-separated
  RequiredBy：强相关列表，指定unit list待本unit启动后启动
  WantedBy--弱相关列表，指定unit list与本unit一起启动
  **参考systemd.unit(5)手册

入门参考：https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/chap-managing_services_with_systemd
官方地址：https://www.freedesktop.org/wiki/Software/systemd/
