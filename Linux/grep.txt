grep -- 查找匹配航

语法：
grep [options] pattern [files]

参数释义：
--help    打印grep的帮助信息

-V,--version    打印grep的版本信息

-E|--extended-regexp    将pattern解释为extended regular expression(ERE)

-F|--fixed-strings    将pattern解释为固定长度字符串

-G|--basic-regexp    将pattern解释为basic regular expression(BRE,默认)

-P|--perl-regexp    将pattern解释为perl兼容模式regular expression

-e PATTERN|--regexp=PATTERN    匹配的pattern，可多个-e连接，每个-e后面接一个pattern，并对其进行or操作

-f FILE|--file=FILE    从文件中读取pattern，每行为一个pattern

-i|--ignore-case    忽略大小写匹配

-v|--invert-match    反向匹配，匹配pattern不包括的行

-w|--word-regexp    完整单词匹配

-x|--line-regexp    完整行匹配

-c|--count    只打印匹配的累计行数，不打印匹配内容

--color="WHEN"    是否突出显示匹配字元，WHEN选项always|auto|never

-L|--files-without-match    只打印未出现pattern内容的文件名(用于多文件)

-l|--files-with-matches    只打印出现pattern内容的文件名(用于多文件)

-m NUM|--max-count=NUM    匹配pattern内容NUM次后，停止查找

-o|--only-matching    只打印行内匹配部分内容

-q|--quiet|--silent    安静模式，不打印任何匹配内容

-s|--no-messages    不输出错误信息

-b|--byte-offset    打印匹配行相对于文件起始的偏移字节数(出现于匹配内容之前)

-H|--with-filename    打印匹配行对应的文件名(用于多文件)

-h|--no-filename    不打印匹配行对应的文件名(默认)

-n|--line-number    输出匹配行在文件中的行号(基于1起始)

-Z|--null    使用NUL替代文件名后的分隔符

-A NUM|--after-context=NUM    在匹配行后显示NUM行非匹配上下文

-B NUM|--before-context=NUM    在匹配行前显示NUM行非匹配上下文

-C NUM|--context=NUM    在匹配行前后显示NUM行非匹配上下文

-a|--text    将匹配的binary文件作为ASCII文件处理

--binary-files=TYPE    将匹配的binary文件作为指定文件类型TYPE处理

-D ACTION|--devices=ACTION    将FIFO或socket文件进行ACTION操作(默认为read操作)

-d ACTION|--directories=ACTION    将目录进行ACTION操作(默认为read操作)

-r|--recursive    将目录递归进行操作


正则表达式
BRE和ERE
\    关闭后续字符的特殊意义，或打开后续字符的特殊意义

.    匹配任意单个字符(NUL除外)

*    匹配前面字符0至多次

^    代表行起始。BRE中，只有处于第一个字符处才为meta字符；ERE中，处于任何位置都为meta字符

$    代表行结束。BRE中，只有处于最后一个字符才为meta字符；ERE中，处于任何位置都为meta字符

[...]    匹配[]内的任一字符。
  1.-置于非第一个位置时，代表区间；
  2.^置于第一个位置有取反作用；
  3.-或]置于第一个位置时，作为列表一部分；
  4.-和]同时作为列表一部分，需要将]作为第一个字符，将-作为最后一个字符；
  5.其他meta字符也作为列表一部分；
  6.字符集 - 系列字符集合名称。格式[:alpha:]；
  7.排序字符集 - 将多个字符序列视为一个字符。格式[.ch.]；
  8.等价字符集 - 应视为等值的一系列字符。格式[=e=]

BRE
\{n,m\}    匹配前面字符n~m次

\( \)    匹配子模式，可同时存在9个，使用1~9标记

\n    引用\( \)限定的第n个子模式，n可为1~9
**支持BRE的工具：grep/sed/ed/ex/vi/more

ERE
{n,m}    匹配前面字符n~m次

+    前面的字符匹配1或多次

?    前面的字符匹配0或1次

|    匹配符号前或符号后的字符集

( )    匹配分组群          
**支持ERE的工具：egrep/awk/lex

BRE syntax extend:
\<    单词起始位置
\>    单词结束位置
\b    单词开始或结束位置
\B    非单词开始或结束位置(字符)
\w    单词字符([a-zA-Z0-9_])
\W    非单词字符

优先级列表：
1.[..][==][::]
2.\metacharacter
3.[]
4.()
5.*+?{}
6.no symbol
7.^$
8.|

