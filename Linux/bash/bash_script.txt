script通则：
1.指令从上而下执行
2.遇到Line Feed则执行指令
3.#后的内容为注解
4.#!/bin/bash为script声明

$((statement))：表示得出算术运算结果

指令行参数变量引用：
示例
steven@www ~$ ./demo.sh arg1 arg2 arg3
变量释义
$#    脚本名称后的参数个数(3个)
${0}    脚本名称(demo.sh)
$@    完整参数列表(arg1 arg2 arg3)
$<number>    对应的参数($1为arg1...$3为arg3)

参数引用偏移：
shift [number]    将参数引用向右偏移number位，左边的参数省略，number默认为1

条件判断：
if[CONDITION1];then
  STATEMENT1
elif[CONDITION2];then
  STATEMENT2
else
  STATEMENT3
fi

取值案例：
case VAR in
VALUE1)
  STATEMENT1
;;
VALUE2)
  STATEMENT2
;;
*)
  STATEMENT3
;;
esac

循环：
while[CONDITION]
do
  STATEMENT
done

util[CONDITION]
do
  STATEMENT
done

for VAR in VALUE_LIST
do
  STATEMENT
done

for((INIT_VAL;END_VAL;STEP))
do
  STATEMENT
done

方法/函数：
function FUN_NAME(){
  STATEMENT
}
方法/函数补充：
方法有自己的变量，如下：
$0    方法名称
$<number>    调用方法时，后续跟的值
