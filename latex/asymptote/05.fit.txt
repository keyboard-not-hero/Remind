// warning: 每个示例头三行必添加内容
import settings;
outformat="pdf";
pdfviewer="evince";

一、Demo(示例)01 - subpath
unitsize(1cm);
real xmin=-0.1;
real xmax=2;
real ymin=-0.1;
real ymax=2;

path s=(0,0){up}..(1,1)..(xmax,sqrt(xmax));
fill(s--(xmax,0)--cycle,mediumgray);
draw(s);

arrowbar axisarrow=Arrow(TeXHead);
draw((xmin,0)--(xmax,0),arrow=axisarrow);
draw((0,ymin)--(0,ymax),arrow=axisarrow);

real x=1.4;
real dx=0.05;
path striptop=subpath(s,x,x+dx);
draw((x,0)--striptop--(x+dx,0)--cycle,blue);
clip(box((1,ymin),(1.6,1.5)));

// subpath(s,x,x+dx); 创建一个贴合路径s, 从x到x+dx的截断, 返回该路径



二、Demo(示例)02 - times
unitsize(1cm);
path p=(-2,0)..(0,7/4)..(6/4,0)..(0,-5/4)..(-1,0)..(0,3/4)..(1,0)..(0,-1/2)..(0,0);
arrowbar end=ArcArrow(TeXHead);
arrowbar mid=MidArcArrow(TeXHead);

draw(p, arrow=end);
real[] isections=times(p,1/3);
draw(subpath(p, isections[0], isections[1]), p=blue, arrow=mid);
draw(subpath(p, isections[2], isections[3]), p=red, arrow=mid);
draw((1/3,-1.5)--(1/3,2), mediumgray);

// times(p,1/3)返回路径p与(1/3,0)垂直线的交点数组, 数组顺序根据路径p的方向排列



三、Demo(示例)03 - intersections
unitsize(1cm);
path p = (-1,1) .. (0,0) .. (-1,-1);
path q = (1/2,0) .. (-1/3,0) .. (1/2,-1/2) .. (1,0) .. (-1/2,1/2);
draw(p,blue);
draw(q,green, arrow=MidArcArrow());
real[][] isections = intersections(p,q);
draw(subpath(p, isections[1][0], isections[2][0]), p=red, arrow=MidArcArrow());

// intersections(p,q)返回两个曲线p与q的交点二维数组, 根据p的方向顺序排列交点, 即isections[*]代表各个交点信息, isections[*][0]为p的交点信息, isections[*][1]为q的交点信息



四、Demo(示例)04 - intersectionpoints
unitsize(1cm);
path p = (-1,1) .. (0,0) .. (-1,-1);
path q = (1/2,0) .. (-1/3,0) .. (1/2,-1/2) .. (1,0) .. (-1/2,1/2);
draw(p,blue);
draw(q,green, arrow=MidArcArrow());
pair[] isections = intersectionpoints(p,q);
dot(isections[0], p=red);
dot(isections[1], p=orange);
dot(isections[2], p=purple);

// intersectionpoints(p,q)返回两个曲线p与q的交点数组, 根据p的方向顺序排列交点



五、Demo(示例)05 - dir
unitsize(1cm);
path p = (1/2,0) .. (-1/3,0) .. (1/2,-1/2)
.. (1,0) .. (-1/2,1/2);
path l = (-1,-1) -- (1,1);
draw(l, dashed+mediumgray);
draw(p, mediumgray);
for (real[] pathtime : intersections(p,l)) {
    real t = pathtime[0];
    pair tangent = dir(p, t);
    draw(shift(point(p,t)) * scale(1/2) * ((0,0) -- tangent),
    arrow=Arrow);
}

// dir(p, t); 返回在路径p上交点t的切线方向向量坐标

// point(p, t); 返回在路径p上交点t的坐标
