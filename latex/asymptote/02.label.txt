// warning: 每个示例头三行必添加内容
import settings;
outformat="pdf";
pdfviewer="evince";

一、Demo(示例)01 - label
label("Hello World", (0,0), align=N);

// Asymptote文件格式为.asy后缀, 编译指令: asy <name>.asy

// defaultpen(fontsize(10pt));, 设置画笔文字大小

// label("Hello World", (0,0), align=N);
       在坐标(0,0)的北方显示指定字符

// void label(picture pic=currentpicture, Label L, pair position, align align=NoAlign, pen p=currentpen, filltype filltype=NoFill)
       在指定位置显示字符. 参数列表如下:
// pic - 默认为currentpicture
// L - 字符串内容或Label对象. 字符串符合LaTeX规则, 如: $...$为公式内容, \textbf{}为加粗字体
// position - 内容放置坐标
// align - 内容偏移位置, 默认为S. 列表: N/S/W/E, 可任意组合(如: NE), 并可与任意数字组合(如: 1.5N+4E)
// p - 文字大小, fontsize对象或颜色名称, 可使用'+'进行组合. 如: p=fontsize(10)
// filltype - 背景色和边框填充类型, 列表如下:
	FillDraw(real xmargin=0, real ymargin=xmargin, pen fillpen=nullpen, pen drawpen=null)
		边框色和背景填充色, 参数列表如下:
		xmargin - 在x轴的拓宽外距
		ymargin - 在y轴的拓宽外距
		fillpen - 背景填充色, 默认与drawpen同色, 当两个参数都未提供, 为黑色
		drawpen - 边框色, 默认与fillpen同色, 当两个参数都未提供, 为黑色

	Fill(real xmargin=0, real ymargin=xmargin, pen p=nullpen)
		背景填充色, 参数列表如下:
		xmargin - 在x轴的拓宽外距
		ymargin - 在y轴的拓宽外距
		p - 背景填充色, 默认为黑色

	NoFill - 无背景填充色和边框色
	
	Draw(real xmargin=0, real ymargin=xmargin, pen p=nullpen)
		边框色, 参数列表如下:
		xmargin - 在x轴的拓宽外距
		ymargin - 在y轴的拓宽外距
		pen - 边框色, 默认为黑色

	UnFill(real xmargin=0, real ymargin=xmargin)
		无背景填充色和边框色, 参数列表如下:
		xmargin - 在x轴的拓宽外距
		ymargin - 在y轴的拓宽外距
		
	RadialShade(pen penc, pen penr)
		圆形扩散渐变色, 参数列表如下:
		penc - 圆心的颜色, 位于文字重心
		penr - 边缘的颜色

// label(picture pic=currentpicture, Label L, path g, align align=NoAlign, pen p=currentpen, filltype filltype=NoFill)
       在指定路径上显示字符. 补充参数如下:
           g - 指定的路径



二、Demo(示例)02 - Label
unitsize(1cm);
Label Lx = Label("$x$", position=EndPoint);
Label Ly = Label("$y$", position=BeginPoint);
Label Lz = Label("$z$", position=MidPoint);
draw((0,0) -- (0,4), arrow=Arrow(TeXHead), L=Lx);
draw((1,0) -- (1,4), arrow=Arrow(TeXHead), L=Ly);
draw((2,0) -- (2,4), arrow=Arrow(TeXHead), L=Lz);

// Label("$x$", position=EndPoint); 表示将Label放置于路径的末端, 详情参考函数参数列表

// Label Label(string s="", align align=NoAlign, pen p=nullpen, embed embed=Rotate, filltype filltype=NoFill)
       返回Label对象. 参数列表如下:
           s - 字符串内容. 符合LaTeX规则, 如: $...$为公式内容, \textbf{}为加粗字体
           align - 相对于原始位置的方位, 列表: N/S/W/E或其组合(如: NE), 并可与任意数字组合(如: 1.5N+4E)
           p - 字符串的大小或颜色, 参考draw方法的p参数
           embed - 允许进行的transfer操作, 列表如下:
               Shift - 进行平移
               Rotate - 进行旋转
               Slant - 进行倾斜
               Scale - 进行伸缩
           filltype - 填充类型, 列表如下:
            Draw - 只画边界
            Draw(real xmargin=0, real ymargin=xmargin, pen p=nullpen)
                画边界. 参数列表如下:
                    xmargin - x轴方向向外扩充的大小
                    ymargin - y轴方向向外扩充的大小
                    p - 向外扩充边缘pen的属性, nullpen代表currentpen
            FillDraw - 填充内部, 画边界
            FillDraw(real xmargin=0, real ymargin=xmargin, pen fillpen=nullpen)
                填充内部, 画边界. 参数列表如下:
                    xmargin - x轴方向向外扩充的大小
                    ymargin - y轴方向向外扩充的大小
                    fillpen - 填充pen的属性, nullpen代表currentpen
            Fill - 填充内部
            Fill(real xmargin=0, real ymargin=xmargin, pen p=nullpen)
                填充内部. 参数列表如下:
                    xmargin - x轴方向向外扩充的大小
                    ymargin - y轴方向向外扩充的大小
                    p - 填充pen的属性, nullpen代表currentpen
            NoFill - 不填充内部
            UnFill - 不填充内部
            UnFill(real xmargin=0, real ymargin=xmargin)
                不填充内部. 参数列表如下:
                    xmargin - x轴方向向外扩充的大小
                    ymargin - y轴方向向外扩充的大小
            RadialShade(pen penc, pen penr)
                由圆心到边缘的颜色渐变. 参数列表如下:
                    penc - 圆心的颜色
                    penc - 边缘的颜色
            RadialShadeDraw(real xmargin=0, real ymargin=xmargin, pen penc, pen penr, pen drawpen=nullpen)
                由圆心到边缘的颜色渐变, 并且可向外扩充大小. 参数列表如下:
                    xmargin - x轴方向向外扩充的大小
                    ymargin - y轴方向向外扩充的大小
                    penc - 圆心的颜色
                    penc - 边缘的颜色
                    drawpen - 向外扩充区域边缘的pen属性

// Label Label(string s="", pair position, align align=NoAlign, pen p=nullpen, embed embed=Rotate, filltype filltype=NoFill)
       生成Label对象. 补充参数如下:	
           position - Label相对于path的位置, 列表如下:
               EndPoint - path末端, 等于Relative(1)
               Midpoint - path中间, 等于Relative(0.5). 默认值
               Beginpoint - path起始端, 等于Relative(0)
               Relative(real) - Label位置位于path总长的比值, 区间为[0,1]



三、Demo(示例)03 - multiple label to a single path
unitsize(1cm);
path p=(0,0)..(4,0.3)..(5,-0.3)..(5,-4);
draw(p);
Label L1=Label("BeginPoint", position=BeginPoint);
Label L2=Label("MidPoint", position=MidPoint);
Label L3=Label("Relative(0.75)", position=Relative(0.75));
Label L4=Label("EndPoint", position=EndPoint);
label(L1,p);
label(L2,p);
label(L3,p);
label(L4,p);

// label(L1,p); 添加Label对象L1到路径p

// void label(picture pic=currentpicture, Label L, path g, align align=NoAlign, pen p=currentpen, filltype filltype=NoFill)
// 参数列表如下:
        L - 字符串内容或Label对象. 字符串符合LaTeX规则, 如: $...$为公式内容, \textbf{}为加粗字体
	g - Label需要添加到的路径
	align - 路径相对于原位置的偏移, 列表: N/S/W/E, 可任意组合(如: NE), 并可与任意数字组合(如: 1.5N+4E)
	p - label大小或颜色名称, 可使用'+'组合. 如: fontsize(5pt)+blue
	filltype - 填充类型, 参考Label参数列表



四、Demo4 - texpath
size(1cm);
path[] P=texpath("i love you");
draw(P);

// path[] texpath(Label L);
       返回L内容对应的字母图像数组
