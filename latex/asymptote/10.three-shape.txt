一、Demo(示例)01 - sphere
import settings;
outformat="pdf";
pdfviewer="evince";
prc=false;

import three;
unitsize(5cm);

draw(unitsphere);

// prc=false; 不启动interactive模式. interactive模式图像可旋转, 被adobe reader支持, 但label在旋转图像后会出现消失等现象

// import three; 导入three包, 绘制三维图像必须的包

// unitsphere - 单位半径球体



二、Demo(示例)02 - 作直线(triple)
import settings;
outformat="pdf";
pdfviewer="evince";
prc=false;

import three;
unitsize(1cm);

draw(O--2X, blue);
draw(O--2Y, green);
draw(O--2Z, red);

// (1,2,3)是一个triple类型的三维坐标

// 向量与对应的alias, 列表如下:
       O - (0,0,0)
       X - (1,0,0)
       Y - (0,1,0)
       Z - (0,0,1)



三、Demo(示例)03 - 矢量图
import settings;
outformat="pdf";
pdfviewer="evince";
render=0;
prc = false;

import three;
size(1cm, 0);
draw((0,0,0) -- (1,1,1), linewidth(2pt));

// render=0
       矢量图设置



四、Demo(示例)04 - 提高图片精度
import settings;
outformat="png";
pdfviewer="evince";
render=16;
prc = false;

import three;
size(1cm, 0);
draw((0,0,0) -- (1,1,1), linewidth(2pt));

// outformat="png"
       修改目标文件为png, 提升图片精度

// render=16
       提高render, 有效提升图片的渲染精度



五、Demo05 - axes
import graph3;
unitsize(1cm);
xaxis3("$x$", axis=YZZero, xmin=-5, xmax=5, p=blue, ticks=InOutTicks(format="$%.4g$", beginlabel=false, endlabel=false, Ticks=new real[]{-4,-3,-2,-1,1,2,3,4}, ticks=new real[]{-3.5,-2.5,-1.5,-0.5,0.5,1.5,2.5,3.5}, Size=3bp, size=2bp, pTick=purple, ptick=orange), arrow=BeginArrow3(arrowhead=HookHead3, size=20, angle=75, filltype=Fill(s), position=point((-5,0)--(5,0), 0.25)));
yaxis3("$y$", axis=XZZero, ymin=-5, ymax=5, p=green);
zaxis3("$z$", axis=XYZero, zmin=-5, zmax=5, p=red);

// void xaxis3(picture pic=currentpicture, Label L="", axis axis=YZZero, real xmin=-infinity, real xmax=infinity, pen p=currentpen, ticks3 ticks=NoTicks3, arrowbar3 arrow=None, bool above=false);
作三维坐标的x轴. 参数列表如下:
    pic - 坐标轴所在picture
    L - 坐标轴的label
    axis - 当前坐标轴相对于其他两个坐标轴的位置. 可选列表:
        axis YZEquals(real y, real z, triple align=0, bool extend=false)
            指定x坐标轴的0点在相对于y/z轴的位置. 参数列表如下:
                y - x坐标轴0点相对于y轴的位置
                z - x坐标轴0点相对于z轴的位置
                align - label L相对于x轴末端、y/z零点的距离
        axis YZZero(triple align=0, bool extend=false)
        axis Bounds(int type=Both, int type2=Both, triple align=0, bool extend=false)
    xmin - 坐标轴的起始位置
    xmax - 坐标轴的结束位置
    p - 坐标轴的pen属性
    ticks - 坐标轴的刻度. 列表如下:
        NoTicks3 - 没有刻度
        InTicks(Label format="", ticklabel ticklabel=null, bool beginlabel=true, bool endlabel=true, real[] Ticks, real[] ticks=new real[], real Size=0, real size=0, bool extend=false, pen pTick=nullpen, pen ptick=nullpen)
          向内的刻度线, 参数列表如下:
            format - 刻度线label格式, 支持LaTeX数学格式(即$$), 默认为$%.4g$. 列表如下:
                $$ - LaTeX math模式
                % - 不输出刻度线label
            beginlabel - 起始刻度线的label是否显示
            endlabel - 结束刻度线的label是否显示
            Ticks - major刻度线位置数组, 格式: Ticks=new real[]{...}
            ticks - minor刻度线位置数组, 格式: ticks=new real[]{...}
            Size - major刻度线的大小
            size - minor刻度线的大小
            pTick - major刻度线的pen, 参考draw方法的p参数
            ptick - minor刻度线的pen, 参考draw方法的p参数
        OutTicks(Label format="", ticklabel ticklabel=null, bool beginlabel=true, bool endlabel=true, real[] Ticks, real[] ticks=new real[], real Size=0, real size=0, bool extend=false, pen pTick=nullpen, pen ptick=nullpen)
          向外的刻度线
        InOutTicks(Label format="", ticklabel ticklabel=null, bool beginlabel=true, bool endlabel=true, real[] Ticks, real[] ticks=new real[], real Size=0, real size=0, bool extend=false, pen pTick=nullpen, pen ptick=nullpen)
          两侧的刻度线
    arrow - 箭头类型. 列表如下:
        None - 没有箭头
        Blank - 不显示箭头和坐标轴
        BeginArrow3(arrowhead arrowhead=DefaultHead3, real size=7.5, real angle=15, filltype filltype, real position)
            起始位置放置反向箭头. 参数列表如下:
                arrowhead - 箭头类型, 列表: DefaultHead3/HookHead3/TeXHead3. 也可在三维空间使用二维箭头. 列表: DefaultHead2/HookHead2/TeXHead2
                size - 箭头大小
                angle - 箭头斜边与水平线的夹角度数
                filltype - 箭头填充类型. 列表如下:
                    Draw - 只画边界
                    Draw(real xmargin=0, real ymargin=xmargin, pen p=nullpen)
                        画边界. 参数列表如下:
                            xmargin - x轴方向向外扩充的大小
                            ymargin - y轴方向向外扩充的大小
                            p - 向外扩充边缘pen的属性, nullpen代表currentpen
                    FillDraw - 填充内部, 画边界
                    FillDraw(real xmargin=0, real ymargin=xmargin, pen fillpen=nullpen)
                        填充内部, 画边界. 参数列表如下:
                            xmargin - x轴方向向外扩充的大小
                            ymargin - y轴方向向外扩充的大小
                            fillpen - 填充pen的属性, nullpen代表currentpen
                    Fill - 填充内部
                    Fill(real xmargin=0, real ymargin=xmargin, pen p=nullpen)
                        填充内部. 参数列表如下:
                            xmargin - x轴方向向外扩充的大小
                            ymargin - y轴方向向外扩充的大小
                            p - 填充pen的属性, nullpen代表currentpen
                    NoFill - 不填充内部
                    UnFill - 不填充内部
                    UnFill(real xmargin=0, real ymargin=xmargin)
                        不填充内部. 参数列表如下:
                            xmargin - x轴方向向外扩充的大小
                            ymargin - y轴方向向外扩充的大小
                    RadialShade(pen penc, pen penr)
                        由圆心到边缘的颜色渐变. 参数列表如下:
                            penc - 圆心的颜色
                            penc - 边缘的颜色
                    RadialShadeDraw(real xmargin=0, real ymargin=xmargin, pen penc, pen penr, pen drawpen=nullpen)
                        由圆心到边缘的颜色渐变, 并且可向外扩充大小. 参数列表如下:
                            xmargin - x轴方向向外扩充的大小
                            ymargin - y轴方向向外扩充的大小
                            penc - 圆心的颜色
                            penc - 边缘的颜色
                            drawpen - 向外扩充区域边缘的pen属性
                position - 箭头在线条的位置, 即path time, 参考subpath指令. 也可使用Relative(real)指定百分比
        MidArrow3(arrowhead arrowhead=DefaultHead3, real size=7.5, real angle=15, filltype filltype)
            中间位置放置正向箭头
        EndArrow3(arrowhead arrowhead=DefaultHead3, real size=7.5, real angle=15, filltype filltype, real position)
            结束位置放置正向箭头
        Arrows3(arrowhead arrowhead=DefaultHead3, real size=7.5, real angle=15, filltype filltype)
            起始位置放置反向箭头, 结束位置放置正向箭头
        差异版本箭头:
            BeginArcArrow3/MidArcArrow3/EndArcArrow3/ArcArrow3
    above - 是否将坐标轴放置在最上层. 默认false, 即放置在最下层



六、Demo06 - 平行四边形与长方体
import graph3;
unitsize(1cm);
xaxis3("$x$", axis=YZZero, xmin=-5, xmax=5, p=RGB(204,255,255));
yaxis3("$y$", axis=XZZero, ymin=-5, ymax=5, p=green);
zaxis3("$z$", axis=XYZero, zmin=-5, zmax=5, p=red);
draw(plane(O=X, Y-X, Z-X), purple);
draw(box(O, (1,1,1)), olive);

// path3 plane(triple u, triple v, triple O=O)
       角为O, 紧邻该角两条边为u/v的平行四边形

// path3[] box(triple v1, triple v2)
       对角分别为v1/v2的长方体



七、Demo07 - circle/dir
import graph3;
unitsize(1cm);
xaxis3("$x$", axis=YZZero, xmin=-5, xmax=5, p=blue);
yaxis3("$y$", axis=XZZero, ymin=-5, ymax=5, p=green);
zaxis3("$z$", axis=XYZero, zmin=-5, zmax=5, p=red);
draw(circle(O, 1, Y));
for(int i = 0; i < 100; i=i+30){
    draw(O -- dir(i, 0), purple);
}

// path3 circle(triple c, real r, triple normal=Z)
       作圆心为c, 半径为r, 垂直于指定方向的圆
       normal代表与圆垂直的向量, 如: Z(0, 0, 1)代表与Z轴垂直

// triple dir(real colatitude, real longitude)
       指定纬/经度的单位向量. 参数列表如下:
           colatitude - 纬度. 南纬90 - 北纬90
           longitude - 经度



八、Demo08 - arc
import graph3;
unitsize(1cm);
xaxis3("$x$", axis=YZZero, xmin=-5, xmax=5, p=RGB(204,255,255), InTicks(Ticks=new real[]{-2,-1,1,2}));
yaxis3("$y$", axis=XZZero, ymin=-5, ymax=5, p=green);
zaxis3("$z$", axis=XYZero, zmin=-5, zmax=5, p=red);
draw(arc(O, 2X, Y), p=RGB(128,128,0));

// path3 arc(triple c, triple v1, triple v2, triple normal=O)
       圆心为c, 半径为|v1-c|, 向量v1-c到向量v2-c的圆弧
       c/v1/v2构成的圆弧通常小于180度, 此时normal可不必指定
       当c/v1/v2在一条直线上(即180度圆弧), 必须指定圆弧垂直的向量normal

// path3 arc(triple c, real r, real theta1, real phi1, real theta2, real phi2, triple normal=O);



九、Demo09 - 将二维图像投射到三维空间
import graph3;
unitsize(1cm);
xaxis3("$x$", axis=YZZero, xmin=-5, xmax=5, p=RGB(204,255,255), InTicks(Ticks=new real[]{-4,-3,-2,-1,1,2,3,4}));
yaxis3("$y$", axis=XZZero, ymin=-5, ymax=5, p=green, InTicks(Ticks=new real[]{-4,-3,-2,-1,1,2,3,4}));
zaxis3("$z$", axis=XYZero, zmin=-5, zmax=5, p=red, InTicks(Ticks=new real[]{-4,-3,-2,-1,1,2,3,4}));
real f(real x){
    return sqrt(x);
}
path p=graph(f, 0, 2);
path3 g=path3(p, plane=ZXplane);
draw(g, purple);

// path3 path3(path p, triple plane(pair) = XYplane);
       将二维路径转化为三维空间内某平面的图像. 参数列表如下:
           p - 原二维路径
           plane - 转化到三维空间的平面. 列表如下: XYplane/YZplane/ZXplane



十、Demo10 - surface
import graph3;
unitsize(1cm);
xaxis3("$x$", axis=YZZero, xmin=-5, xmax=5, p=RGB(204,255,255), InTicks(Ticks=new real[]{-4,-3,-2,-1,1,2,3,4}));
yaxis3("$y$", axis=XZZero, ymin=-5, ymax=5, p=green, InTicks(Ticks=new real[]{-4,-3,-2,-1,1,2,3,4}));
zaxis3("$z$", axis=XYZero, zmin=-5, zmax=5, p=red, InTicks(Ticks=new real[]{-4,-3,-2,-1,1,2,3,4}));
real f(real x){
    return sqrt(x);
}
path p=graph(f, 0, 4);
path3 g=path3(p, plane=ZXplane);
draw(surface(c=O, g, axis=Z, angle1=90.5, angle2=360), purple);

// surface surface(triple c, path3 g, triple axis, int n=12, real angle1=0, real angle2=360)
       构造surface内容. 参数列表如下:
           c - 中心轴上的起始点
           g - 外表面的路径
           axis - 中心轴方向
           n - 构图精度
           angle1 - 起始角度
           angle2 - 结束角度
