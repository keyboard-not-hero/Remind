%\documentclass{article}
%\usepackage{tikz}
%\begin{document}
%\begin{tikzpicture}
%% 示例1
%\draw plot coordinates {(0,0)(1,1)(2,0)(3,1)};

%% 示例2
%\draw plot file {demo.tn};
%% 文件内容如下:
%%0 0
%%1 1
%%2 0 
%%3 1 

%% 示例3
%\draw[->] (0,-5) -- (0,5);
%\draw[->] (-5,0) -- (5,0);
%\draw[samples=10, domain=-pi:pi, smooth] plot (\x,{sin(\x r)});
%\end{tikzpicture}
%\end{document}


% 示例4
\documentclass{article}
\usepackage{tikz}
\usetikzlibrary{datavisualization.formats.functions}
\begin{document}
\begin{tikzpicture}
\datavisualization [school book axes, visualize as smooth line]
data [format=function] {
var x : interval [-2:2];
func y = \value x*\value x + 1;
};
\end{tikzpicture}
\end{document}




内容讲解
1.tikz作函数图的方法:
	(1)使用plot指令. 需手动添加坐标轴和刻度
	(2)使用tikz的datavisualization.formats.functions库. 例: \usetikzlibrary{datavisualization.formats.functions}
	(3)使用latex的pgfplots库(依赖于pgf). 例: \usepackage{pgfplots}


2.plot语法:
	plot coordinates {<coor_1> <coor_2>...} - 连接多个点, 显示指定坐标. 如示例1
	plot file {<file_name>} - 连接多个点, 从文件中读取点坐标. 如示例2
		文件规定格式:
		(1)每一行包含一个坐标, x/y轴数字使用空格分隔
		(2)空行或以'#'/'%'开头的行忽略, 并不会连接忽略行之前一行和之后一行坐标
	plot <coordinate expression> - 使用指定的坐标表达式. 如示例3
		可选参数列表:
			variable - 使用的变量宏, 默认为x
			samples - 样本数, 默认为25
			domain - 样本区间, 默认为[-5,5]
			samples at - 样本取值, 覆盖samples和domain值. 如: samples at={1,3,5,9}
		** 示例3中的sin(\x r)中的r代表将x的值视为弧度值			


3.datavisualization语法:
\usetikzlibrary{datavisualization.formats.functions}
使用tikz库datavisualization.formats.functions

\datavisualization [school book axes, visualize as smooth line]
data [format=function] {
var x : interval [-2:2];
func y = \value x*\value x + 1;
};
\datavisualization代表数据可视化指令, 可选参数school book axes代表传统书本坐标轴; 可选参数visualize as smooth line以曲线画出图形. 
	坐标轴类型列表:
		school book axes - 传统书本上的坐标轴
		scientific axes - 科学文章坐标轴
	线条类型:
		visualize as line - 直线
		visualize as smooth line - 曲线
		visualize as scatter - 坐标点标记
data{}代表数据点集合. 可选参数列表:
	format - 数据集合格式, 默认为table. 数据集合格式详情:
		(1)table - 每行一个坐标点, x/y值默认使用','分隔, 第一行为列标题. 例:
			data {
				x, y
				0, 0
				1, 1
				2, 0
				3, 1
			};
		(2)named - 每行一个坐标点, x/y值默认使用','分隔, 并且详细指定key. 例:
			data [format=named]{
				x=0, y=0
				x=1, y=1
				x=2, y=0
				x=3, y=1
			};
		(3)function - 函数定义域/值域声明. 例:
			% format=function代表x/y坐标点使用function的自变量和值域方法获得
			data [format=function] {
				% 定义域三种方法
				% i   var声明x为变量, interval指定定义域区间, samples指定样本量
				var x : interval [-2,2] samples 7; 
				% ii  step指定步进
				var x : interval [-2,2] step 0.5;
				% iii 指定样本列表
				var x : {-2,-1,0,1,2}; 
				% func代表y由function方法获得, 并且使用\value x指定引用变量
				func y= \value x * \value x; 
			};
		(4)*从文件读取. 例:
			% 文件为csv格式, 即每行一个坐标, 默认使用','分隔x/y值, 第一行为列标题
			data [read from file=<file_name.csv>];
	separator - 指定x/y之间的分隔符, 默认为','. 如: \space/';'等
	headline - 第一行的列名称列表




