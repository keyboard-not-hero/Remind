\documentclass{article}
\begin{document}
\begin{tikzpicture}
\draw (-2.5,0) -- (2.5,0);
\draw (0,-2.5) -- (0,2.5);
\foreach \x/\xtext in {-2,-1.5/-\frac{3}{2},-1,-0.5/-\frac{1}{2},0.5/\frac{1}{2},1,1.5/\frac{3}{2},2} 
	\draw (\x,-1pt) -- (\x,1pt) node[below=5pt]{$\xtext$};
\foreach \y in {-2,-1.5,...,-0.5,0.5,1,...,2} 
	\draw (-1pt,\y) -- (1pt,\y);

\foreach \x in {100,95,...,0}
{
    \coordinate (A) at ($ (0,0) + 0.2*(100-\x,0) $);
    \coordinate (B) at ($ (1,1) + 0.2*(100-\x,0) $);
    \filldraw[fill=green!\x!white] (A) rectangle (B);
}

\end{tikzpicture}
\end{document}



内容讲解
1.\foreach \x in {-2,-1.5,-1,-0.5,0.5,1,1.5,2} <statement>用于遍历数字, 并将其赋值给变量\x. statement中可直接引用变量\x的值

2.
(1)可使用{<start>,...,<end>}表示一个float类型连续区间, 步进为1; 
(2)当使用{<first>,<second>,...,<end>}时, 可表示为float类型连续区间, 步进为<second>-<first>;
(3)实例中, -2,-1.5,...,-0.5代表第一个连续区间, 步进为-0.5-(-2); 0.5,1,...,2为第二个连续区间, 步进为1-0.5

3.\foreach可多层嵌套. 例:
	\foreach \x in {1,2,3,4}
		\foreach \y in {2,4,6}
		{
			statement
		}

4.由于tikz无法识别\frac{}{}形式的分数形式, 所以使用如下形式表示小数的分数展现形式:
	\foreach \x/\frac_num in {2,1.5/\frac{3}{2}}
\frac_num的值为列表中entry的'/'符号后的值, 当该entry不包含'/'时, 直接取entry值, 最后, 使用$\frac_num$使用变量值

5.\foreach \x in {100,95,...,0}
{
    \coordinate (A) at ($ (0,0) + 0.2*(100-\x,0) $);
    \coordinate (B) at ($ (1,1) + 0.2*(100-\x,0) $);
    \filldraw[fill=green!\x!white] (A) rectangle (B);
}
坐标A/B的x轴循环偏移递进位置, 并且当foreach内包含多条语句时, 使用'{}'限定
