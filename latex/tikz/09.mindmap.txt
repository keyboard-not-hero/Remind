% Demo 01
%\documentclass{article}
%\usepackage{tikz}
%\begin{document}
%\begin{tikzpicture}
%\node{1}
%    child{node{2}}
%    child{node{3}}
%    child{node{4}};
%\end{tikzpicture}
%\end{document}
%
%
% Demo 02
%\documentclass{article}
%\usepackage{tikz}
%\begin{document}
%\begin{tikzpicture}
%\node{1}
%    child{node{2}
%        child{node{5}}
%        child{node{6}}
%    }
%    child{node{3}
%        child{node{7}}
%        child{node{8}}
%        child{node{9}}
%    }
%    child{node{4}
%        child{node{10}}
%    };
%\end{tikzpicture}
%\end{document}
%
%
% Demo 03
%\documentclass{article}
%\usepackage{tikz}
%\begin{document}
%\tikzset{level 1/.style={sibling distance=6em},
%level 2/.style={sibling distance=1em}
%}
%\begin{tikzpicture}[font=\footnotesize, grow=right, level distance=5cm]
%\node{1}
%    child{node{2}
%        child{node{5}}
%        child{node{6}}
%    }
%    child{node{3}
%        child{node{7}}
%        child{node{8}}
%        child{node{9}}
%    }
%    child{node{4}
%        child{node{10}}
%    };
%\end{tikzpicture}
%\end{document}
%
%
% Demo 04
%\documentclass{article}
%\usepackage{tikz}
%\usetikzlibrary{trees}
%\begin{document}
%\tikzset{level 1/.style={sibling angle=120},
%level 2/.style={sibling angle=30}
%}
%\begin{tikzpicture}[font=\footnotesize, grow cyclic, level distance=5cm]
%\node{1} 
%	child{node{2}
%		child{node{5}}
%		child{node{6}}
%		child{node{7}}
%		child{node{8}}
%	}
%	child{node{3}
%		child{node{9}}
%		child{node{10}}
%		child{node{11}}
%		child{node{12}}
%		child{node{13}}
%		child{node{14}}
%		child{node{15}}
%	}
%	child{node{4}
%		child{node{16}}
%		child{node{17}}
%		child{node{18}}
%		child{node{19}}
%		child{node{20}}
%		child{node{21}}
%		child{node{22}}
%	};
%\end{tikzpicture}
%\end{document}
%
%
% Demo 05
%\documentclass{article}
%\usepackage{tikz}
%\usetikzlibrary{trees}
%\begin{document}
%\tikzset{edge from parent/.style={red, thick, draw}}
%\begin{tikzpicture}[edge from parent fork down]
%\node{root}
%	child{node {left}}
%	child{node {right}
%		child{node {child}}
%		child{node {child}}
%	};
%\end{tikzpicture}
%\end{document}
%
%
% Demo 06
%\documentclass{article}
%\usepackage{tikz}
%\usetikzlibrary{mindmap}
%\begin{document}
%\tikzset{
%every node/.style={concept}
%}
%\begin{tikzpicture}[mindmap, concept color=red!50]
%\node{Root concept}
%    child[grow=right]{node{Child concept}};
%\end{tikzpicture}
%\end{document}
%
%
%\documentclass{article}
%\usepackage{tikz}
%\usetikzlibrary{mindmap}
%\begin{document}
%\tikzset{
%every node/.style={concept},
%root concept/.append style={concept color=red!50},
%level 1 concept/.append style={concept color=green!20},
%level 2 concept/.append style={concept color=blue!20}
%}
%\begin{tikzpicture}[mindmap]
%\node {Computational Complexity} % root
%	child { node {Computational Problems}
%		child { node {Problem Measures} }
%		child { node {Problem Aspects} }
%		child { node {Problem Domains} }
%		child { node {Key Problems} }
%	}
%	child { node {Computational Models}
%		child { node {Turing Machines} }
%		child { node {Random-Access Machines} }
%		child { node {Circuits} }
%		child { node {Binary Decision Diagrams} }
%		child { node {Oracle Machines} }
%		child { node {Programming in Logic} }
%	}
%	child { node {Measuring Complexity}
%		child { node {Complexity Measures} }
%		child { node {Classifying Complexity} }
%		child { node {Comparing Complexity} }
%		child { node {Describing Complexity} }
%	}
%	child { node {Solving Problems}
%		child { node {Exact Algorithms} }
%		child { node {Randomization} }
%		child { node {Fixed-Parameter Algorithms} }
%		child { node {Parallel Computation} }
%		child { node {Partial Solutions} }
%		child { node {Approximation} }
%	};
%\end{tikzpicture}
%\end{document}
%
%
%\documentclass{article}
%\usepackage{tikz}
%\usetikzlibrary{mindmap}
%\begin{document}
%\tikzset{
%every node/.style={concept},
%root concept/.append style={concept color=red!50},
%level 1 concept/.append style={concept color=green!20},
%level 2 concept/.append style={concept color=blue!20}
%}
%\begin{tikzpicture}[mindmap]
%\node {Computational Complexity} % root
%	child[concept color=orange] { node {Computational Problems}
%		child { node {Problem Measures} }
%		child { node {Problem Aspects} }
%		child { node {Problem Domains} }
%		child { node {Key Problems} }
%	}
%	child[concept color=purple] { node {Computational Models}
%		child { node {Turing Machines} }
%		child { node {Random-Access Machines} }
%		child { node {Circuits} }
%		child { node {Binary Decision Diagrams} }
%		child { node {Oracle Machines} }
%		child { node {Programming in Logic} }
%	}
%	child { node {Measuring Complexity}
%		child { node {Complexity Measures} }
%		child { node {Classifying Complexity} }
%		child { node {Comparing Complexity} }
%		child { node {Describing Complexity} }
%	}
%	child { node {Solving Problems}
%		child { node {Exact Algorithms} }
%		child { node {Randomization} }
%		child { node {Fixed-Parameter Algorithms} }
%		child { node {Parallel Computation} }
%		child { node {Partial Solutions} }
%		child { node {Approximation} }
%	};
%\end{tikzpicture}
%\end{document}
%
%
%\documentclass{article}
%\usepackage{tikz}
%\usetikzlibrary{mindmap}
%\begin{document}
%\tikzset{
%every node/.style={concept},
%root concept/.append style={concept color=red!50},
%level 1 concept/.append style={concept color=green!20},
%level 2 concept/.append style={every child/.style={concept color=blue!20}}
%}
%\begin{tikzpicture}[mindmap]
%\node {Computational Complexity} % root
%	child{ node {Computational Problems}
%		child { node {Problem Measures} }
%		child { node {Problem Aspects} }
%		child { node {Problem Domains} }
%		child { node {Key Problems} }
%	}
%	child{ node {Computational Models}
%		child { node {Turing Machines} }
%		child { node {Random-Access Machines} }
%		child { node {Circuits} }
%		child { node {Binary Decision Diagrams} }
%		child { node {Oracle Machines} }
%		child { node {Programming in Logic} }
%	}
%	child { node {Measuring Complexity}
%		child { node {Complexity Measures} }
%		child { node {Classifying Complexity} }
%		child { node {Comparing Complexity} }
%		child { node {Describing Complexity} }
%	}
%	child { node {Solving Problems}
%		child { node {Exact Algorithms} }
%		child { node {Randomization} }
%		child { node {Fixed-Parameter Algorithms} }
%		child { node {Parallel Computation} }
%		child { node {Partial Solutions} }
%		child { node {Approximation} }
%	};
%\end{tikzpicture}
%\end{document}


\documentclass{article}
\usepackage{tikz}
\usetikzlibrary{mindmap}
\begin{document}
\tikzset{
every node/.style=concept,
root concept/.append style={concept color=red!50},
level 1 concept/.append style={every child/.style={concept color=green!30}, sibling angle=90},
level 2 concept/.append style={every child/.style={concept color=blue!30}, sibling angle=45}
}
\begin{tikzpicture}[mindmap, grow cyclic, execute at begin node=\hskip0pt]
\node {Computational Complexity} % root
	child { node {Computational Problems}
		child { node {Problem Measures} }
		child { node {Problem Aspects} }
		child { node {Problem Domains} }
		child { node {Key Problems} }
	}
	child { node {Computational Models}
		child { node {Turing Machines} }
		child { node {Random-Access Machines} }
		child { node {Circuits} }
		child { node {Binary Decision Diagrams} }
		child { node {Oracle Machines} }
		child { node {Programming in Logic} }
	}
	child { node {Measuring Complexity}
		child { node {Complexity Measures} }
		child { node {Classifying Complexity} }
		child { node {Comparing Complexity} }
		child { node {Describing Complexity} }
	}
	child { node {Solving Problems}
		child { node {Exact Algorithms} }
		child { node {Randomization} }
		child { node {Fixed-Parameter Algorithms} }
		child { node {Parallel Computation} }
		child { node {Partial Solutions} }
		child { node {Approximation} }
	};
\end{tikzpicture}
\end{document}










内容讲解
一、Tree
1.\node{1}
	child{node{2}}
	child{node{3}}
	child{node{4}};
用于只有一层子结构的分支树


2.\node{1}
    child{node{2}
        child{node{5}}
        child{node{6}}
    }
    child{node{3}
        child{node{7}}
        child{node{8}}
        child{node{9}}
    }
    child{node{4}
        child{node{10}}
    };
用于包含两层子结构的分支树. 该tree的缺点:
	(1)内容文字重叠
	(2)固定自上而下的垂直模式


3.\tikzset{level 1/.style={sibling distance=6em},
level 2/.style={sibling distance=1em}
}
level <n>的style指定当前层级的属性(root层为0, 第二层为1...), 其中, sibling distance代表当前层级兄弟node的间隔

\begin{tikzpicture}[font=\footnotesize, grow=right, level distance=5cm]
可选参数font=\footnotesize指定文字为脚注大小
grow=right指定结构为从左向右的水平模式
level distance指定不同分支层级之间的距离


4.\tikzset{level 1/.style={sibling angle=120},
level 2/.style={sibling angle=30}
}
\begin{tikzpicture}[font=\footnotesize, grow cyclic, level distance=5cm]
grow cyclic代表以圆周向外层扩散分支树, 需配合在level <n>的style中使用sibling angle(而非sibling distance)来注明sibling之间的角度距离. 该选项包含在tikz库trees中, 语法: \usetikzlibrary{trees}


5.\tikzset{edge from parent/.style={red, thick, draw}}
edge from parent style设置子节点与父节点连线属性(红色/粗线条), 并画出连线

\begin{tikzpicture}[edge from parent fork down]
可选参数edge from parent fork down设置连接线条为类似于形状E


二、Mindmap
6.\begin{tikzpicture}[mindmap, concept color=red!50] 可选参数mindmap指定图像为思维导图, 需要使用tikz库mindmap; concept color指定颜色

every node/.style={concept} 使用指定属性颜色填充node背景


7.\tikzset{
every node/.style={concept},
root concept/.append style={concept color=red!50},
level 1 concept/.append style={concept color=green!20},
level 2 concept/.append style={concept color=blue!20}
}
root concept的append style用于添加特性到root属性
level 1 concept的append style用于添加特性到level 1 tree属性(level 2...同理)
当当前level没有指定concept color时, 从上层继承


8.child[concept color=orange] { node {Computational Problems} 当concept color用于单个子tree的child关键字时, 该node颜色修改为指定颜色, 并且父节点到子节点的连线实线颜色渐变(默认为连线使用子节点的颜色)


9.level 2 concept/.append style={every child/.style={concept color=blue!20}} 用于给当前层及所有子层的所有child关键字配置concept color, 以此达到指定该层node颜色以到上层的连线为渐变色. 
所有, 当level 1使用every child关键字后, level 2/3/4...最好持续使用


10.\tikzset{
every node/.style=concept,
root concept/.append style={concept color=red!50},
level 1 concept/.append style={every child/.style={concept color=green!30}, sibling angle=90},
level 2 concept/.append style={every child/.style={concept color=blue!30}, sibling angle=45}
}
sibling angle用于指定兄弟节点之间的间隔角度

\begin{tikzpicture}[mindmap, grow cyclic, execute at begin node=\hskip0pt]
可选参数grow cyclic指定方向树形方向为随着层级向外扩散的圆周, execute at begin node=\hskip0pt用于指定允许text在node内自动进行西文单词内换行
