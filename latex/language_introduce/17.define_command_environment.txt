一、Demo_01 -- 定义变量(def)
\documentclass{ctexart}
\usepackage{xcolor}
\setlength{\parindent}{0mm}
\def\grayscale{1}
\definecolor{hide}{gray}{\grayscale}
\begin{document}
\textcolor{hide}{This is first line}\\
This is second line\\
\end{document}

内容讲解
1.\def\<variable>{<value>}
    定义变量值，用于后续引用. 参数列表如下:
        variable - 变量名称
        value - 变量的取值
        ** 不对value进行数学计算. 如: \def\mvar{2+1}，直接引用为2+1字符串



二、Demo_02 -- 引用命令内容(let)
\documentclass{ctexart}
\usepackage{graphicx}
\usepackage{pifont}
\let\oldding\ding
\renewcommand{\ding}[2][1.2]{\raisebox{-1pt}{\scalebox{#1}{\oldding{#2}}}}
\begin{document}
    \ding{173}\ding{175}
\end{document}

内容讲解
1.\let\oldding\ding
    使用\oldding引用\ding命令的值. 格式:
        \let\<new_name>\<old_name>

2.如果重定义命令需要引用原命令内容，则需要使用\def中转



三、Demo_03 -- 新建命令(newcommand)
\documentclass{ctexart}
\setlength{\parindent}{0mm}
\newcommand{\nonearg}{Richard Stallman }
\newcommand{\fonthei}[1]{{\heiti #1}}
\newcommand{\mysequence}[2]{$#1_1,#1_2,\cdots,#1_#2$}
\newcommand{\othersequence}[2][k]{$#2_1,#2_2,\cdots,#2_#1$}
\newcommand{\mathenv}{$E=mc^2$}
\newcommand{\ensuremathenv}{\ensuremath{E=mc^2}}
\begin{document}
\nonearg is my idol\\
Richard Stallman's wife is a hero\\
\fonthei{这是黑体字}\\
数列: \mysequence{a}{n}\\
数列: \othersequence{b}\\
\mathenv\\
\ensuremathenv\\
$\ensuremathenv$\\
\end{document}

内容讲解
1.\newcommand{cmd}[num][default_val]{content}
    用于新建指令, 参数如下:
	cmd - 新建指令名称, 不能与已有指令和环境重名, 并且不能以\end开头
	num - 新建指令的参数个数, 范围为0~9, 默认为0
	default_val - 指令第一个参数的默认值, 使之成为新建指令的可选参数. 但也只能指定第一个参数为可选参数
	content - 指令代表的内容, 可使用#1,#2...引用新建指令传递的参数 
	** 该指令位于preamble区时, 新建指令可作用于正文所有区域; 位于正文时, 新建指令只作用于该指令之后. 建议放置在preamble区域
	** 在该命令中，所有参数都不能包含抄录命令\verb或抄录环境verbatim

2.当使用新命令时，正文中后续空格会被忽略，所以需要在\newcommand的content参数尾部硬性添加空格，并且遇到标点符号会自动省略该空格
或者
使用\xspace用于自动生成一个空格，该命令在xspace宏包中

3.\newcommand{\fonthei}[1]{{\heiti #1}}用于定义带一个必选参数的命令，作用为加粗当前环境内的内容

4.\newcommand{\mysequence}[2]{$#1_1,#1_2,\cdots,#1_#2$}用于定义带两个必选参数的命令，作用为定义一个数列

5.\newcommand{\othersequence}[2][k]{$#2_1,#2_2,\cdots,#2_#1$}用于定义带一个必选参数、一个可选参数的命令，作用为定义一个数列

6.\newcommand*{cmd}[num][default_val]{content}为\newcommand的带'*'模式, 新建指令参数中不能包含换段落指令(\par或者空行). 该命令更容易定位错误

7.\providecommand{cmd}[num][default_val]{content}也用于新建指令，与\newcommand的区别:
当新建命令与已有指令重名时，不进行报错，新建命令不生效

8.\ensuremath{}用于确保内容位于math mode. 位于paragraph/LR mode时, 内容为$<content>$; 位于math mode时, 内容为<content>

9.在LaTeX源代码中，带@的命令为核心命令，无法直接引用或\newcommand直接定义，需要使用如下命令限定:
\makeatletter ... \makeatother
\makeatletter用于指定后续带@的命令为核心命令，\makeatother用于指定后续@为普通字符



四、Demo_04 -- 更新已有命令(renewcommand)
\documentclass{ctexart}
\setlength{\parindent}{0mm}
\newcommand{\nonearg}{Richard Stallman }
\renewcommand{\nonearg}{Hello World}
\begin{document}
\nonearg
\end{document}

内容讲解
1.\renewcommand{cmd}[num][default_val]{content}
    用于修改已有指令, 参数如下:
	cmd - 修改指令名称, 不能与已有指令和环境重名, 并且不能以\end开头
	num - 修改指令的参数个数, 范围为0~9, 默认为0
	default_val - 指令第一个参数的默认值, 使之成为新建指令的可选参数. 但也只能指定第一个参数为可选参数
	content - 指令代表的内容, 可使用#1,#2...引用新建指令传递的参数 
	** 该指令位于preamble区时, 新建指令可作用于正文所有区域; 位于正文时, 新建指令只作用于该指令之后. 建议放置在preamble区域
	** 在该命令中，所有参数都不能包含抄录命令\verb或抄录环境verbatim



五、Demo_05 -- 新建环境(newenvironment)
\documentclass{article}
\newenvironment{emphit}[1]{\begin{itemize}\em{#1}}{\end{itemize}}
\begin{document}
this paragraph is normal
\begin{emphit}{\bfseries}
    \item this paragraph is em
\end{emphit}
\end{document}

内容讲解
1.\newenvironment{env_name}[num_arg][default_val]{begin_cmd}{end_cmd}
    用于定义新环境, 参数列表如下:
        env_name - 环境名称 
	num_arg - 新环境使用时携带的参数个数，范围为1~9
	default_val - 第一个参数的默认值
	begin_cmd - 引用的\begin环境. 可使用#1,#2...引用参数
	end_cmd - 引用的\end环境. 不可使用#1,#2...引用参数

2.\renewenvironment语法与\newenvironment类似, 用于重定义已存在环境名称



六、Demo_06 -- 长度(setlength)
\documentclass{article}
\setlength{\parindent}{0cm}
\begin{document}
this is first paragraph

\setlength{\parindent}{2cm}
this is second paragraph

\addtolength{\parindent}{0.5\parskip}
this is third paragraph

\setlength{\parindent}{0cm}
smallthis is fourth paragraph

\settowidth{\parindent}{\em small}
this is fifth paragraph
\end{document}

内容讲解
1.\setlength{\parindent}{0cm}用于配置\parindent指令的长度

2.\addtolength{\parindent}{0.5\parindent}用于添加0.5个原parindent长度到parindent上

3.\newlength{\cmd}配置一个新长度指令, 并且长度为0in

4.\settowidth{\parindent}{\em small}用于配置parindent长度与指定文本长度一致, 该文本处于LR mode

5.\settoheight, \settodepth与\settowidth类似, 但用于设置垂直高度指令, 使该指令高度与文本的height/depth一致. 相关概念如下:
	reference point - 引用点, 位于字母t的左下方
	base line - 基线, 穿过引用点的水平线
	height - 基线到最高字母的顶部
	depth - 基线到字母g的底部



% 分式格式优化
\newcommand{\mfrac}[2]{\dfrac{\,#1\,}{\,#2\,}}
% 注意标签与字体，增强focus
\newcommand{\warning}[1]{{\footnotesize\textcolor[gray]{0.6}{\rule[-3.6pt]{4pt}{13pt}}\hspace{2pt}\colorbox[gray]{0}{\textcolor[gray]{1}{注意}} #1}}
% 超出页面左侧的题号
\newcommand{\quesnum}[1]{\makebox[0pt][r]{#1\:}}
% 选择题答案双行格式
\newenvironment{dtable}[1][2cm]{\begin{table}[H]\begin{tabular}{@{\extracolsep{0mm}}l@{\extracolsep{#1}}l}}{\end{tabular}\end{table}}
% 定义圆内阿拉伯数字大小
\let\oldding\ding
\renewcommand{\ding}[2][1.2]{\raisebox{-1pt}{\scalebox{#1}{\oldding{#2}}}}
% 是否显示选择题/填空题答案
\def\hidenum{0}
% 填空题格式
\newcommand{\uline}[2][3mm]{\underline{\hspace{#1}\textcolor[gray]{\hidenum}{#2}\hspace{#1}}}
% 选择题格式
\newcommand{\choice}[1]{\hspace{2mm}\textcolor[gray]{\hidenum}{#1}\hspace{2mm}}
% caption无默认标签，和内容2pt垂直距离
\captionsetup{labelformat=empty,skip=2pt}
% 浮动体与外部内容的垂直距离为2mm
\setleng{\intextsep}{2mm}
% 双图并行
\newenvironment{dfigure}[4]{\begin{figure}[H]
  \begin{minipage}[b]{0.5\linewidth}
    \centering
    #2
    \caption{#1}
  \end{minipage}
  \begin{minipage}[b]{0.5\linewidth}
    \centering
    #4
    \caption{#3}
  \end{minipage}
}{\end{figure}}
% 三图并行
\newenvironment{dfigure}[6]{\begin{figure}[H]
  \begin{minipage}[b]{0.32\linewidth}
    \centering
    #2
    \caption{#1}
  \end{minipage}
  \begin{minipage}[b]{0.32\linewidth}
    \centering
    #4
    \caption{#3}
  \end{minipage}
    \begin{minipage}[b]{0.32\linewidth}
    \centering
    #6
    \caption{#5}
  \end{minipage}
}{\end{figure}}


最后编辑于: 2025-03-14
