一、Demo(示例)01 -- in-text formula
\documentclass{article}
\usepackage{amssymb}
\begin{document}
	The formula \( x-3y = 7 \) is easy to type.\\
	$E = mc^2$\\
	\begin{math}
		x^2 = y^2 + z^2
	\end{math}\\
	\( a_1 > x^{2n}/y^{2n} \)\\
	$\because y =\frac{x}{1}$, $\therefore y' = 1$\\
	$\sqrt[3]{8}=2$
\end{document}

内容讲解
1.\( ... \)用于限定行内公式内容

2.$ ... $用于限定行内公式内容

3.\begin{math} ... \end{math}用于限定行内公式内容

4._用于指定公式的subscript, ^用于指定公式的supscript

5.'在公式中为微分符号

6.数学公式中, \because和\therefore为几何的因为/所以符号, 在amssymb宏包中定义

7.\frac为分数的分子分母分割线

8.\dfrac为displaystyle格式\frac, \tfrac为textstyle格式\frac, 在amsmath宏包中定义. displaystyle和textstyle格式参考Demo14

9.\sqrt[root]{num}用于求数num的root次方根, root默认为2



二、Demo(示例)02 - one-line display formula
\documentclass{article}
\begin{document}
	\begin{displaymath}
		x'+y^2=z_i^2
	\end{displaymath}
	\begin{equation}
		x'+y^2=z_i^2
	\end{equation}
	\[x'+y^2=z_i^2 \text{this is formula}\]
\end{document}

内容讲解
1.\begin{displaymath} ... \end{displaymath}用于行间公式环境, 公式居中显示

2.\[ ... \]用于行间公式环境, 公式居中显示

3.\begin{equation} ... \end{equation}用于含编号的行间公式环境, 公式居中. \renewcommand{\theequation}{\alph{equation}}用于修改equation编号类型, 列表如下:
	arabic - 数字
	alph - 小写英文字母
	Alph - 大写英文字母
	roman - 小写罗马字母
	Roman - 大写罗马字母

4.\text用于在math mode中输入paragraph mode格式文字. 包含在amsmath宏包中

5.\abovedisplayshortskip用于设置行间公式与之前正文的垂直距离, 如: \setlength\abovedisplayshortskip{10pt}; \belowdisplayshortskip用于设置行间公式与之后正文的垂直距离。建议在preamble区使用

6.本示例所有环境为单行行间公式环境



三、Demo(示例)03 - eqnarray
\documentclass{article}
\begin{document}
\begin{eqnarray}
    a & b & g\\
    c & d & i\\
    e & f & k
\end{eqnarray}
\begin{eqnarray}
    \lefteqn{\sum_{i=0}^n a_i=} & \\
    & a_1+a_2+\ldots+a_n
\end{eqnarray}
\end{document}

内容讲解
1.\begin{eqnarray} ... \end{eqnarray}用于限定多行多列公式环境, 列之间使用'&'分隔, 行之间使用'\\'分隔, 最多支持3列, 第一列右对齐, 第二列居中对齐, 第三列左对齐

2.每行自动进行公式编号, 使用\nonumber可不参与编号

3.\begin{eqnarray*} ... \end{eqnarray*}为不编号版本

4.第一列和第三列使用display formula格式, 第二列使用in-text formula格式

5.\lefteqn{}用于配置列的宽度为0. 常用于eqnarray环境中

6.\begin{eqnarray*} ... \end{eqnarray*}为不带编号版本



四、Demo(示例)04 - align
\documentclass{article}
\usepackage{amsmath}
\begin{document}
\begin{align}
    x+y+z & c+d & e\\
    f*g & h & i+j*k
\end{align}
\end{document}

内容讲解
1.\begin{align} ... \end{align}为多行多列公式环境, \\分隔行, &分隔列, 每行各包含一个编号, 奇数列右对齐, 偶数列左对齐. 包含在amsmath宏包中

2.\begin{align*} ... \end{align*}为不带编号版本

3.\begin{aligned} ... \end{aligned}为放置于math mode中的版本, 并且不带编号

4.\begin{flalign} ... \end{flalign}为align的水平空间尽量拉伸版本, \begin{flalign*} ... \end{flalign*}为flalign无编号版本

5.\begin{alignat} ... \end{alignat}为align的水平空间列之间无间隙版本, \begin{alignat*} ... \end{alignat*}为alignat无编号版本



五、Demo(示例)05 - gather
\documentclass{article}
\usepackage{amsmath}
\begin{document}
\begin{gather}
    x+y+z\\
    f*g
\end{gather}
\end{document}

内容讲解
1.\begin{gather} ... \end{gather}为多行单列公式环境, \\分隔行, 每行各包含一个编号. 包含在amsmath宏包中

2.\begin{gather*} ... \end{gather*}为不带编号的版本

3.\begin{gathered} ... \end{gathered}为放置于math mode环境的版本, 并且不带编号



六、Demo(示例)06 - math font style
\documentclass{article}
\usepackage{amsmath}
\usepackage{bm}
\begin{document}
\begin{gather}
    \mathit{ABCDabcd1234}\\
    \mathbf{ABCDabcd1234}\\
    \mathrm{ABCDabcd1234}\\
    \mathsf{ABCDabcd1234}\\
    \mathtt{ABCDabcd1234}\\
	\bm{ABCDabcd1234}
\end{gather}
\end{document}

内容讲解
1.\begin{gather} ... \end{gather}用于含多行公式的行间公式环境, 包含在amsmath宏包中

2.\mathit为斜体公式, \mathbf为粗体公式, \mathrm为roman体, \mathsf为无衬线体, \mathtt为打印机字体. 详情参考symbol_summary

3.\bm{}可使大小写字母成为斜体并加粗. 包含在bm宏包中. math字体不可嵌套



七、Demo(示例)07 - binary operator
\documentclass{article}
\begin{document}
	\mp\\
	\ominus\\
	\lhd
\end{document}

内容讲解
1.\mp为二进制运算符. 详情参考symbol_summary

2.\lhd包含在latexsym宏包中



八、Demo(示例)08 - array
\documentclass{article}
\begin{document}
\begin{displaymath}
\begin{array}{l l l l}
    a+b & \begin{array}[t]{c}
    a\\b
    \end{array}\\
    c+d & \begin{array}{c}
    c\\d
    \end{array}
\end{array}
\end{displaymath}
\end{document}

内容讲解
1.\begin{array}{horiz_aligns...} ... \end{array}用于指定数学公式表格环境, aligns可使用如下内容:
	l - 当前列的每一行左对齐
	c - 当前列的每一行中间对齐
	r - 当前列的每一行右对齐
	| - 列之间的分隔线或左/右侧边线, 该垂直线占据整个深度
	@{text} - 使用指定字符text作为列之间的分割线或左/右侧边线
			  text为\hspace{width}时, 使用指定长度空白作为当前列分隔符
			  text为<null>时, 列之间无分隔符
			  text为\extracolsep{width}, 使用指定长度空白作为之后所有的列分隔符, 适用于后续所有列分隔, 直到再次遇到其他\extracolsep{width}, 被新值覆盖
	p{width} - 设置当前列为指定宽度, 当内容达到该宽度后自动换行. 内容左对齐, 垂直方向上对齐
	*{num}{cols} - 指定num个连续列都采用cols指定格式

2.\begin{array}[vert_align]{horiz_aligns...} ... \end{array}, vert_align表示使用指定位置对齐中线位置, 可选列表: b/c/t, 默认为c

3.数组的列之间使用'&'分隔, 行之间使用'\\'分隔

4.最后一行末尾不能使用'\\'

5.array只能用于math mode



九、Demo(示例)09 - Overlining and Underlining
\documentclass{article}
\begin{document}
	$\overline{x+y}$\\
	\underline{x+y}\\
	$\overbrace{x+y}$\\
	$\underbrace{x+y}$
\end{document}

内容讲解
1.\overline{}用于上划线

2.\underline{}用于下划线, 并且可用于paragraph mode和LR mode

3.\overbrace{}用于水平上括号, 并可对指令使用^{}添加备注

4.\underbrace{}用于水平下括号, 并可对指令使用_{}添加备注

5.\cancel{}用于斜线方向删除线, \bcancel{}用于反斜线方向删除线. 包含在cancel宏包中



十、Demo(示例)10 - math accent
\documentclass{article}
\usepackage{amsmath}
\begin{document}
	\begin{gather}
		\hat{a}\\
		\widehat{aa}\\
		\breve{\imath}
	\end{gather}
\end{document}

内容讲解
1.\hat用于对公式单字符内容进行重音配置

2.\widehat用于对长公式内容进行重音配置

3.\breve{\imath}用于对字符进行重音配置, i或j进行重音时, 需要先消除头部'.', 使用指令\imath或\jmath

4.详情参考symbol_summary



十一、Demo(示例)11 - stacking symbols
\documentclass{article}
\usepackage{amsmath}
\begin{document}
\begin{gather}
	A \stackrel{a'}{\rightarrow} B \stackrel{b'}{\rightarrow} C
\end{gather}
\end{document}

内容讲解
\stackrel{up}{down}表示进行内容堆叠, down是下方的内容, up是上方的内容



十二、Demo(示例)12 - space
\documentclass{article}
\usepackage{amsmath}
\begin{document}
\begin{gather}
    x\!+\!y\!=\!z\\
    x+y=z\\
    x\,+\,y\,=\,z\\
    x\:+\:y\:=\:z\\
    x\;+\;y\;=\;z\\
    x\ +\ y\ =\ z
\end{gather}
\end{document}

内容讲解
1.\!代表缩小与\,相同的间隔距离, 但\!为反向空格

2.间隔距离汇总: \! < <space> < \, < \: < \; < \<space>

3.所有空格适用于paragraph mode和LR mode



十三、Demo(示例)13 - theorem
\documentclass{article}
\usepackage{ntheorem}
\theoremstyle{plain}
\theoremheaderfont{\heiti}
\theorembodyfont{\normalfont}
\newtheorem{pythagorean}{pythagorean theorem}
\newtheorem{mass-energy}[pythagorean]{conservation of mass-energy theorem}
\begin{document}
\begin{pythagorean}
    $3^2+4^2=5^2$
\end{pythagorean}
\begin{mass-energy}
    $E=mc^2$
\end{mass-energy}
\end{document}

内容讲解
1.\newtheorem{env_name1}[env_name2]{theorem_label}[section]用于新建定理环境, env_name1为当前定理环境名称; env_name2为使用相同定理编号计数器的其他定理环境; theorem_label为定理显示的主标签名称; section用于以section为单位区分定理计数器, 也可以为其他chapter/subsection等. 通常放置于preamble区

2.\newframedtheorem与\newtheorem语法类似, 创建带边框的定理环境. 需调用framed宏包; 包含在ntheorem宏包中, 并且需要携带framed可选参数

3.\newshadedtheorem与\newtheorem语法类似, 创建带阴影的定理环境. 需调用framed和pstricks宏包; 包含在ntheorem红包中, 并且需要携带framed可选参数. 
默认使用gray背景阴影, 在该定义之前使用\shadecolor{color}重新上色
可使用\def\theoremframecommand{box_type}重新选择盒子类型(参考pstricks), 类型如下:
	\psframebox[fillstyle,fillcolor,framearc,linecolor,linewidth] - 单层边框盒子, fillstyle代表填充风格(列表参考后续), fillcolor指定填充颜色(需指定fillstyle), framearc指定边框的圆角系数, linecolor指定边框颜色, linewidth指定边框宽度. fillstyle列表:
		crosshatch - 交叉栅栏. 不可填充背景色
		crosshatch* - 交叉栅栏. 可填充背景色
		solid - 实心填充. 可填充背景色
		
	\psdblframebox - 双层边框盒子

	\psshadowbox - 带阴影的单层边框盒子
	默认配置: \def\theoremframecommand{\psframebox[fillstyle=solid,fillcolor=gray,linecolor=gray]}

4.\theoremstyle{style}设定定理格式风格. 包含在ntheorem宏包中. style参数如下:
	plain - 与系统默认提供的格式相同. 如: <定理标签> <定理号> [副标签] <正文>
	break - 标签头自成一行. 如: <定理标签> <定理号> [副标签] <Enter> <正文>
	change - 定理标签与序号位置互换. 如: <定理号> <定理标签> [副标签] <正文>
	changebreak - 定理标签与序号位置互换, 并且标签头自成一行. 如: <定理号> <定理标签> [副标签] <Enter> <正文>
	margin - 序号置于左边margin处. 如: <定理号> <定理标签> [副标签] <正文>
	marginbreak - 序号置于左边margin处, 并且标签头自成一行. 如: <定理号> <定理标签> [副标签] <Enter> <正文> 
	nonumberplain - 与plain类似, 但没有序号. 如: <定理标签> [副标签] <正文>
	nonumberbreak - 与break类似, 但没有序号. 如: <定理标签> [副标签] <Enter> <正文> 
	empty - 没有标签和序号, 可以有副标签(此时副标签没有括号)
	** 如需在标签和正文之间添加换行符, 使用'\ \\'符号
	
5.\theoremheaderfont{header_font}设置头部字体格式. 包含在ntheorem宏包中

6.\theorembodyfont{body_font}设置正文字体格式. 包含在ntheorem宏包中

7.\theoremseparator{sep}指定定理头部和正文的分隔符号, 默认为' '. 包含在ntheorem宏包中. 可使用':'/'.'/'\hspace{2ex}'等
** theoremstyle的empty选项不支持该指令
** 使用如下格式强制在theorem header之后换行
	\begin{env_name}[aux_label]\ \\
		<content>
	\end{env_name}

8.\theorempreskip{dimen}和\theorempostskip{dimen}分别用于指定newtheorem定理环境与之前/之后正文的垂直距离(适用于ntheorem v1.32及以后, 之前版本使用\theorempreskipamount<dimen>和\theorempostskipamount<dimen>) 包含在ntheorem宏包中

9.\theoremframepreskip{}和\theoremframepostskip{}分别用于指定newframedtheorem定理环境与之前/之后正文的垂直距离. 包含在ntheorem宏包中

10.\theoreminframepreskip{}和\theoreminframepostskip{}分别用于指定newframedtheorem定理内容与边框上/下边界的垂直距离. 包含在ntheorem宏包中

11.\theoremindent<dimen>中, dimen指定定理环境的所有内容缩进宽度

12.\theoremsymbol{end_symbol}设置定义结束符, 位于正文右下角. 包含在ntheorem宏包中, 并且该指令需要使用宏包的thmmarks可选参数

13.\theoremnumbering{counter_format}设置序号计数格式. 包含在ntheorem宏包中. 格式列表如下:
	arabic - 阿拉伯数字
	alph - 小写字母
	Alph - 大写字母
	roman - 小写罗马数字
	Roman - 大写罗马数字
	greek - 小写希腊字母
	Greek - 大写希腊字母
	chinese - 汉语数字. 如: 一/二
	fnsymbol - 特殊符号

14.ntheorem.sty默认配置:
	\theoremstyle{plain}
	\theoremheaderfont{\normalfont\bfseries}
	\theorembodyfont{\itshape}
	\theoremseparator{}
	\theorempreskip{\topsep}
	\theorempostskip{\topsep}
	\theoremindent0cm
	\theoremnumbering{arabic}
	\theoremsymbol{}

Theorem(定理)建议配置:
	\theoremstyle{marginbreak}
	\theoremheaderfont{\normalfont\bfseries}
	\theorembodyfont{\slshape}
	\theoremsymbol{\ensuremath{\diamondsuit}}
	\theoremseparator{:}
	\newtheorem{Theorem}{Theorem}

Definition(定义)建议配置:
	\theoremstyle{plain}
	\theoremsymbol{\ensuremath{\clubsuit}}
	\theoremseparator{.}
	\newtheorem{Definition}{Definition}

15.\begin{env_name}[aux_label] ... \end{env_name}用于定理内容环境, 代表定理的内容描述, aux_descript为theorem_label之后的副标签. 定理环境与之前的内容大概有4ex垂直距离

16.\listtheorems{env_name1,env_name2,...}用于生成指定定理类型的目录列表. 只有\begin{env_name}...\end{env_name}才会被收录, \begin{env_name*}...\end{env_name*}不会被收录

17.\theoremlisttype{type}指定定理目录的类型, 列表如下:
	all - 定理的编号/副标题(可选)/页码
	allname - 定理的主标题/编号/副标题(可选)/页码
	opt - 类似于all, 但只列出带有副标题的item
	optname - 类似于allname, 但只列出带有副标题的item



十四、Demo(示例)14 - switch math style
\documentclass{article}
\begin{document}
	$\sum$\\
	$\displaystyle\sum$\\
	\[\sum\]\\
	\[\textstyle\sum\]\\
	a_i\\
	a_{\textstyle i}\\
	a_{i^j}\\
	a_{i^{\scriptstyle j}}
\end{document}

内容讲解
1.\displaystyle将后续内容指定为display formula格式

2.\textstyle将后续内容指定为in-text formula格式

3.\scriptstyle将后续内容指定为script formula格式

4.\scriptscriptstyle将后续内容指定为scriptscript formula格式



十五、Demo(示例)15 - normal symbol
\documentclass{article}
\begin{document}
    $\frac{3}{2}$\\
    $\sqrt{2}\\
    $a_{2}^{3}$\\
\end{document}

内容讲解
1.\frac{numerator}{denominator}为分数形式, numerator为分子, denominator为分母

2.\sqrt[n]{number}为求次方根, n为所求次方根, number为求次方根的数字

3._为下角标, ^为上脚标



十六、Demo(示例)16 - differential and integral
\documentclass{article}
\usepackage[compat1]{wasysym}
\usepackage{scalerel}
\def\stretchint[#1]#2{\vcenter{\hbox{\scaleto[#1]{\displaystyle\int}{#2}}}}
\newcommand*{\dif}{\mathop{}\!\mathrm{d}}
\begin{document}
$\frac{dy}{dx}=x$

$\frac{\dif y}{\dif x}=x$

$\displaystyle\int x^a\dif x=\dfrac{x^{a+1}}{a+1}+C(a\neq -1)$

$\displaystyle\varint x^a\dif x=\dfrac{x^{a+1}}{a+1}+C(a\neq -1)$

$\stretchint[4ex]{10ex}x^a\dif x$
\end{document}

内容讲解
1.\newcommand*{\dif}{\mathop{}\!\mathrm{d}} 定义一个新指令\dif, 指令解释如下:
	\mathop{} - 将括号内解释为一个数学操作符整体, 因此可在正上/下方添加supscript/subscript
	\! - 代表math mode下的negative thin space
	\mathrm{} - 指定math mode内容为罗马直立字体


2.普通数学模式的微分算式符号为斜体, 但标准应该为直立体, 所以需要借助步骤1来进行定义新指令


3.$\displaystyle\int x^a\dif x=\dfrac{x^{a+1}}{a+1}+C(a\neq -1)$
指定使用英文文献格式(积分符号向右倾斜)指定积分符号

$\displaystyle\varint x^a\dif x=\dfrac{x^{a+1}}{a+1}+C(a\neq -1)$
指定使用德文文献格式(积分符号直立)指定积分符号

使用德文文献格式积分符号需要使用wasysym宏包, 并且使用compat1可选项, 用于使用\varint指定德文文献格式, /int语义不变; 当使用integrals替换compat1可选项时, \var指定德文文献格式的积分符号, 无英文文献格式积分符号


4.\def\stretchint[#1]#2{\vcenter{\hbox{\scaleto[#1]{\displaystyle\int}{#2}}}}
定义新指令\stretchint, 指令包含一个可选参数和一个必选参数, 指令内容如下:
	\vcenter - 内容垂直居中
	\scaleto[max_width]{object}{height} - 将内容伸缩到指定宽度和高度, max_width为最大宽度; object为内容区域, 默认处于math mode模式; height为内容的高度. 包含在scalerel宏包中

$\stretchint[4ex]{10ex}x^a\dif x$
指定新格式\int的宽度为4ex, 高度为10ex


最后编辑于: 2020-11-20
