Demo_01 -- 第一个示例
\documentclass[11pt]{article}
\begin{document}
    Hello \LaTeX
\end{document}

内容讲解
1.\documentclass[]{}为文档的第一个之类，指定文档类型。其中，参数可分为以下两种情况：
    (1)代表必要参数的{}，该类参数必须进行指定，当有多个必要参数时，必须按顺序进行指定，不能调换顺序
    (2)代表可选参数的[]，该类参数可以指定，也可以省略，当有多个可选参数时，必须按顺序进行指定(不能只省略序列靠前的可选参数，到导致乱序)；可选参数[]也可以由多个可选子参数构成[sub_arg1,sub_arg2...]，由半角逗号分隔，不能留空格, 顺序可以打乱

2.\documentclass[arg1,arg2,...]{doc_class}指定文档类型. 参数列表:
    arg<N> - 可选参数的子参数. 列表:
	10pt | 11pt | 12pt - 指定内容文字大小. article/report/book/letter都默认为10pt. 不支持slides文档类型
	
	letterpaper | legalpaper | executivepaper | a4paper | a5paper | b5paper - 指定输出的页面大小, 默认为letterpaper. 宽x高参数列表如下:
	    letterpaper		8.5in x 11in, 216mm x 280mm
	    legalpaper		8.5in x 14in, 216mm x 356mm
	    executivepaper	7.25in x 10.5in, 184mm x 266mm
	    a4paper 		210mm x 297mm
	    a5paper 		148mm x 210mm
	    b5paper	    	176mm x 250mm

	landscape - 将页面的宽和高的尺寸交换

	final | draft - draft代表草稿模式, 在超过宽度内容的结尾右侧使用黑色小方块就行标记; final代表普通模式，超过宽度内容不进行标记. 默认为final

	oneside | twoside - oneside代表所有页面统一对齐显示, article/report文档类型默认选项; twoside代表奇数页偏左对齐, 偶数页偏右对齐(偏向书本中心), book文档类型默认选项. 不支持letter/slides文档类型

	openright | openany - openany代表新chapter可从奇/偶数开启, report文档类默认选项; openright代表新chapter只从奇数页开启, book文档类的默认选项. 只支持report/book文档类型(因为article/letter/slides不支持章节)

	onecolumn | twocolumn - 页面分为一个块或左右两个块显示, 默认选项为onecolumn. 支持article/report/book文档类型

	titlepage | notitlepage - notitlepage代表标题页和摘要页不另成一页, article文档类默认选项; titlepage代表标题生成一个单独页, 摘要生成单独页, report/book/slides文档类默认选项。不支持letter文档类型

	openbib - 参考文献entry的author/title都各占一行. 不支持slides/letter文档类型

	leqno - equation和eqnarray公式环境的公式编号出现在左侧. 默认为右侧

	fleqn - 行间公式左对齐, 包含统一缩进. 默认为居中对齐
	    默认行间公式还额外存在缩进, 可在preamble区域使用\mathindent调整缩进, 如: \setlength{\mathindent}{2cm}

    doc_class - 文档类型。类型列表: article/report/book/letter/slides
	


2.\usepackage[arg1,arg2,...]{pac_name1,pac_name2,...}指定包含额外指令的包, 属于document preamble内容
    arg<N> - 可选参数列表
    pac_name<N> - 导入的包名, 文件后缀为.sty
    ** package冲突: 根据冲突package出现先后顺序, 后导入的包覆盖先导入的包. 当两个包都有同一个指令时, 出现command '<command>' already defined错误提示, 可在preamble区使用\let\<command>\undefined取消该指令的定义; 先导入包独有的指令不可用


3.\begin{document}之前的部分为导言(preamble). 在该部分的命令，对正文的全文产生影响


4.begin{document} ... \end{document}指定正文内容部分. 正文的命令，只对命令之后的内容产生影响


5.\end{document}后的所有内容被忽略


6.%之后的当前行内容都是注释



Demo_02 -- 基础结构
\documentclass{article}
\title{simple demo}
\author{steven thompson \and lucy}
\date{\today}
\begin{document}
\maketitle
\tableofcontents
\begin{abstract}
this is abstract information
\end{abstract}
\section{Hello}
	Hello World!!
\section{Introduction}
	Welcome to latex introduction
\end{document}


结构讲解
标题 - \maketitle

目录 - \tableofcontents \listoffigures \listoftables

摘要 - \begin{abstract}...\end{abstract

内容结构
	article document class
	\part(in article)             level0
        \section                      level1
	\subsection                   level2
	\subsubsection                level3

	report/book document class
	\part(in report/book)         level-1
	\chapter(only report/book)    level0
        \section                      level1
	\subsection                   level2
	\subsubsection                level3

document类别对应的层级序列:
article - [part] -> section -> subsection...
report - [part] -> chapter -> section -> subsection...	


内容讲解
1.\title{}为标题内容

2.\author{}为作者名字, 多个名字使用\and进行分隔

3.\date{}为日期(可选), 可使用\today生成当前日期

4.\thanks{}可用于给title/author/date内容作脚注

5.\maketitle为生成标题的指令，位于正文部分

6.\tableofcontents生成目录索引, 包含两个步骤:
	i. 生成.toc文件
	ii.生成目标文件

7.\listoffigures生成entry依据为\begin{figure}...\end{figure}中的\caption内容, \listoftables类似

8.\begin{abstract} ... \end{abstract}为摘要信息环境

9.\section[toc_entry]{heading}用于设置节的目录名称(toc_entry)和节名称(heading), section相关指令中不能包含脆弱(fragile)指令, 如\footnote, 需要使用\protect指令进行保护, 即\protect\footnote. \section的fragile指令列表:
    \(    \)    \begin    \end    \footnote

10.\section*{heading}为section的当前位置不参与编号版本, 并且不被目录toc收录

11.fncychap宏包用于定制化chapter标题, 可选参数指定不同类型定制, 列表如下: Lenny/Sonny/Glenn/Conny/Rejne/Bjarne/Bjornstrup



三、Demo(示例)03 - split document of input
% root file(root.tex):
\documentclass{article}
\begin{document}
	this is root file content\\
	\input{aux}
\end{document}

% auxiliary file(aux.tex):
this is auxiliary file content

内容讲解:
1.\input{file_name}用于导入其他文件的全部内容(类似于将辅助文件的内容全部粘贴到根文件), file_name为辅助文件的名称(不带文件后缀, 默认为.tex). aux文件特性:
	(1)不能包含\documentclass{}、preamble区域内容、\begin{document}
	(2)直接在当前页开始嵌入内容, 不适用新page
	(3)可在辅助文件中再使用\input导入其他文件内容, 嵌套特性

2.\input常用语定义新指令或配置长度的集合



四、Demo(示例)04 - split document of include
% root file
\documentclass{article}
\begin{document}
this is first line
\include{aux.tex}
\end{document}

% aux file
this is second line

内容讲解
1.\include{file_name}类似于input, 特性:
	(1)不能包含\documentclass{}、preamble区域内容、\begin{document}
	(2)开启新page - 在新的一页中, 进行内容导入
	(3)不可在辅助文件中再使用\include导入其他文件, 但可以使用\input. 即不可嵌套
	(4)联合includeonly - 联合\includeonly, 只有包含在\includeonly内的文件名, 能被导入

2.\includeonly{file1,file2,...}用于限定能被\include导入的文件列表. 规则如下:
	(1)没有该指令时, 所有文件可被\include导入;
	(2)file列表为空时, 所有文件不可被\include导入
	(3)在preamble区域使用



五、Demo(示例)05 - page style
\documentclass{article}
\begin{document}
	\pagestyle{plain}
	\pagenumbering{arabic}
    Alice was beginning to get very tired of sitting by her sister on the
bank, and of having nothing to do: once or twice she had peeped into
the book her sister was reading, but it had no pictures or
conversations in it, “and what is the use of a book,” thought Alice
“without pictures or conversations?”

So she was considering in her own mind (as well as she could, for the
hot day made her feel very sleepy and stupid), whether the pleasure of
making a daisy-chain would be worth the trouble of getting up and
picking the daisies, when suddenly a White Rabbit with pink eyes ran
close by her.
\end{document}

内容讲解
1.\pagestyle{type}用于指定页面类型, 页面包含head/body/foot属性, type可选列表:
	plain - head为空, foot包含页码. article/report文档类型的默认类型
	empty - head和foot都为空
	headings - head包含章/节信息(信息由文档类型决定)和页码, foot为空. 可使用如下两个指令替换章节信息:
	myheadings - 类似于headings, 但可指定head显示的信息. 可使用如下两个指令添加head附加信息:
		\markright{right_head} - 用于oneside文档, 指定right_hand附加内容信息
		\markboth{left_head}{right_head} - 用于twoside文档, 指定left_hand和right_hand附加内容信息
		其中, 两个指令处于LR mode

2.\thispagestyle{type}语法与\pagestyle一致, 但只作用于当前页
	
3.\pagenumbering{num_style}用于指定页码从当前页从1起始, num_style指定格式, 列表如下:
	arabic - 阿拉伯数字, 默认
	roman - 小写罗马数字
	Roman - 大写罗马数字
	alph - 小写字母
	Alph - 大写字母

4.\flushbottom为declaration指令, 用于指定所有页面的高度一致, 当存在某页没有填充满时, 会造成其他页面出现过多垂直空白

5.\raggedbottom为declaration指令, 用于指定所有页面不需要高度一致, 尽量填充满页面
