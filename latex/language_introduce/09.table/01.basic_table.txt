Demo_01 -- 基础表格
\documentclass{article}
\usepackage{array}
\setlength{\parindent}{0pt}
\begin{document}
Hello \begin{tabular}[t]{|l|l|}
    \hline
    1 & 2\\
    \hline
    3 & 4\\
    \hline
\end{tabular} World\\

Hello \begin{tabular}[b]{|l@{}l|l|}
    \hline
    1 & 2 & 3\\
    \hline
    4 & 5 & 6\\
    \hline
\end{tabular} World\\

Hello \begin{tabular}{|l@{ii\hspace{2cm}ii}l|l|}
    \hline
    1 & 2 & 3\\
    \hline
    4 & 5 & 6\\
    \hline
\end{tabular} World\\

Hello \begin{tabular}{|l@{\extracolsep{1cm}}l|l|}
    \hline
    1 & 2 & 3\\
    \hline
    4 & 5 & 6\\
    \hline
\end{tabular} World\\
\end{document}


内容讲解
1.\begin{tabular}[<vertical_align>]{<column_format>} ... \end{tabular}限定表格的环境, 该环境可用于任何模式(paragraph/LR/math mode). 参数列表如下:
    vertical_align
        表格与外部内容的垂直对齐方式. 可选列表: 
	    t - 表格的顶部边框与外部文本行的基线对齐
	    c - 表格的中部与外部文本行的基线对齐. 默认值
	    b - 表格的底部边框与外部文本行的基线对齐
	    ** 若要使表格的第一行内容代替顶部边框与外部文本对齐，可使用array宏包提供的\firsthline替换第一行之前的\hline
	    ** 若要使表格的最后一行内容代替底部边框与外部文本对齐，可使用array宏包提供的\lasthline替换最后一行之后的\hline
    column_format
        表格内每一列内容和列之间分隔符的格式. 内容如下:
            l - 当前列左对齐
            c - 当前列居中对齐
            r - 当前列右对齐
            | - 作一条长度等于表格总高度的垂直线
	    || - 作两条长度等于表格高度的垂直线, 可使用\doublerulesep设置两条垂直线的距离, 如: \setlength{\doublerulesep}{6pt}, 默认为2pt
	    *{n}{<column_format>} - 后续n个列使用相同的列格式指定. 如: *{3}{|c}|与|c|c|c|效果一致
            @{<statement>} - 将表格侧边或列之间留白替换为指定内容, statement可选列表如下:
                <null> - 列内容之间无空白, 两列紧紧相依
                <string> - 填充字符串
		\hspace{<width>} - 指定水平空白距离
                \extracolsep{<width>} - 使用指定长度空白作为之后所有'前分隔符与列内容位置'的填充, 直到再次遇到其他\extracolsep{width}, 被新值覆盖
	    !{<statement>} - 类似于@{<statement>}, 但不删除原有的分隔空间(\tabcopsep指定间隔)
            p{<width>} - 设置列为指定宽度, 达到指定宽度后自动换行. 内容水平方向左对齐, 垂直方向top对齐, 首行缩进为0pt. 相当于\parbox[t]{<width>}{...}
            m{<width>} - 设置列为指定宽度, 达到指定宽度后自动换行. 内容水平方向左对齐, 垂直居中对齐, 首行缩进为0pt. 相当于\parbox{<width>}{...}
            b{<width>} - 设置列为指定宽度, 达到指定宽度后自动换行. 内容水平方向左对齐, 垂直方向bottom对齐, 首行缩进为0pt. 相当于\parbox[b]{<width>}{...}
            >{} - 用于l/c/r/p/m/b之前, 作用于下一列内容
            <{} - 用于l/c/r/p/m/b之后, 作用于上一列内容
        ** 如果需要对p/m/b的水平对齐方式设置, 可通过>{\centering\arraybackslash}配置水平居中对齐, 其他水平方向为:raggedright(左对齐)/raggedleft(右对齐). 由于\centering等水平对齐指令会影响表格环境对换行指令\\的处理, 所以需要在对齐声明后使用\arraybackslash


2.表格正文符号. 列表如下:
    &           - 代表列与列之间的分割符号
    \\          - 换行符号
    \hline      - 长度与表格总宽度相等的水平线
    \cline{i-j} - 表示从第i列的左侧到第j列的右侧的水平线
    \vline      - 一条长度等于行高的垂直线


3.设定表格属性
1)\arrayrulewidth
    表格边框宽度. 格式: \setlength{\arrayrulewidth}{2pt}. 默认为0.4pt

2)\doublerulesep
    双表格线的间距. 格式: \setlength{\doublerulesep}{3pt}. 默认为2pt

3)\arraystretch
    表格上下单元的距离系数. 格式: \renewcommand{\arraystretch}{1.3}. 默认为1

4)\extrarowheight
    表格行的额外附加高度(内容距离表格单元上边框). 格式: \setlength{\extrarowheight}{2pt}. 默认为0pt
    在preamble设置时，作用于所有表格；在正文设置，作用于当前环境内的后续所有表格

5)\tabcolsep
    列与列空白宽度的一半. 格式: \setlength{\tabcolsep}{1cm}. 默认为6pt


4.\begin{tabular*}{<width>}[<vertical_align>]{<format>}...\end{tabular*}为tabular的指定表格宽的版本


5.tabular特性
1)tabular作为字符盒子, 不可跨页

2)tabular适用于math mode/paragraph mode/LR mode所有模式

3)tabular可嵌套

4)tabular可放置于(并且建议)表格浮动环境内(table)


6.\begin{array}...\end{array}与tabular参数完全一致, 但是array只能在math mode环境中使用



Demo_02 -- 合并列
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\begin{document}
\begin{tabular}{l|l|l|l}
    \hline
    name & sex & item & score\\
    \hline
    peter & \multicolumn{2}{c|}{null} & 99\\
    \hline
    david & male & english & 76\\
    \hline
    steven & male & english & 59\\
    \hline
\end{tabular}

\begin{tabular}{|c|l|l|}
\hline
    选项 & \multicolumn{1}{|c|}{事实或结论} & \multicolumn{1}{|c|}{推理或推断}\\
    \hline
    A & 酸性溶液pH小于7 & pH小于7的溶液一定是酸性溶液\\
    \hline
    B & 碱能使无色酚酞溶液变红 & 能使无色酚酞变红的一定是碱\\
    \hline
    C & 酸与碱反应生成盐和水 & 生成盐和水的反应一定是酸和碱的反应\\
    \hline
    D & 氧化物中都有氧元素 & 含有氧元素的化合物都是氧化物\\
    \hline
\end{tabular}
\end{document}


内容讲解
1.\multicolumn{<num>}{<format>}{content}用于合并多列, 参数列表如下:
    num - 合并的列数
    format - 合并列的格式. 内容如下:
        l - 当前列左对齐
        c - 当前列居中对齐
        r - 当前列右对齐
        | - 作一条长度等于表格总高度的垂直线
        || - 作两条长度等于表格高度的垂直线, 可使用\doublerulesep设置两条垂直线的距离, 如: \setlength{\doublerulesep}{6pt}, 默认为2pt
        @{<statement>} - 在列之间替换为指定内容, statement可选列表如下:
            <null> - 列内容之间无空白, 两列紧紧相依
            <string> - 填充字符串
	    \hspace{<width>} - 指定水平空白距离
            \extracolsep{<width>} - 使用指定长度空白作为分隔符与列内容的空白填充
        !{<statement>} - 类似于@{<statement>}, 但不删除原有的分隔空间(\tabcopsep指定间隔)
        p{<width>} - 设置列为指定宽度, 达到指定宽度后自动换行. 内容水平方向左对齐, 垂直方向top对齐, 首行缩进为0pt. 相当于\parbox[t]{<width>}{...}
        m{<width>} - 设置列为指定宽度, 达到指定宽度后自动换行. 内容水平方向左对齐, 垂直居中对齐, 首行缩进为0pt. 相当于\parbox{<width>}{...}
        b{<width>} - 设置列为指定宽度, 达到指定宽度后自动换行. 内容水平方向左对齐, 垂直方向bottom对齐, 首行缩进为0pt. 相当于\parbox[b]{<width>}{...}
        >{} - 应用于后一列, 即l/c/r/p/m/b之前设置
        <{} - 应用于前一列, 即l/c/r/p/n/b之后设置
    ** 如果需要对p/m/b的水平对齐方式设置, 可通过>{\centering\arraybackslash}配置水平居中对齐, 其他水平方向为:raggedright(左对齐)/raggedleft(右对齐). 由于\centering等水平对齐指令会影响表格环境对换行指令\\的处理, 所以需要在对齐声明后使用\arraybackslash
    content - 合并单元格的内容

2.\multicolumn可以指定合并单列, 用于指定表格单元的水平对齐方式



Demo_03 -- 定义新的列格式
\documentclass{article}
\usepackage{array}
\usepackage{float}
\setlength{\parindent}{0pt}
\newcolumntype{M}{>{\centering\arraybackslash}m{2cm}}
\begin{document}
\begin{table}[H]
    \begin{tabular}{*{4}{|c}|M*{4}{|c}|}
        \hline
        1 & 2 & 3 & 1 & 2 & 3 & 1 & 2 & 3\\
        \hline
        4 & 5 & 6 & 4 & 5 & 6 & 4 & 5 & 6\\
        \hline
        7 & 8 & 9 & 7 & 8 & 9 & 7 & 8 & 9\\
        \hline
    \end{tabular}
\end{table}
\end{document}

内容讲解
1.\newcolumntype{<type_name>}[<arg_num>]{<format>}
    配置新的列名称. 参数列表如下:
        type_name - 新的列名称，只能使用一个字母表示
	arg_num - 新名称的参数个数. 默认为0
	format - 新列名称的列格式. 参考tabular的column_format



最后编辑于: 2025-04-26
