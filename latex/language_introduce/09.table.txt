一、Demo(示例)01 -- tabbing
\documentclass{article}
\begin{document}
\begin{tabbing}
    this is \= column one\\
    this \> is column two\\
    this is column three \kill
\end{tabbing}
\end{document}

内容讲解
1.\begin{tabbing} ... \end{tabbing}用于指定表格环境

2.\=设定下一列的起始位置(锚), \>跳转到下一列(定位), \\换行符, \kill不显示当前行

3.tabbing可跨页

4.tabbing只适用于paragraph mode



二、Demo(示例)02 -- basic tabular
示例1
\documentclass{article}
\begin{document}
\begin{tabular}{l|l|l l}
    \hline
    name & sex & item & score\\
    \cline{1-2}
    peter & male & math & 99\\
    david & male & english & 76\\
    steven & male & english & 59\\
    \hline
\end{tabular}
\end{document}

示例2
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{bigstrut}
\usepackage{multirow}
\usepackage{array}
\begin{document}
\begin{tabular}{>{\centering}p{0.2\textwidth}|>{\centering}p{0.2\textwidth}|>{\centering}p{0.2\textwidth}|>{\centering\arraybackslash}p{0.2\textwidth}}
    \hline
    \multicolumn{3}{c|}{部门的产出分配} & \multirow{2}*{采购部门}\\\cline{1-3}
    煤炭 & 电力  & 钢铁 & \\\hline
    0.0 & 0.4 & 0.6 & 煤炭\\\hline
    0.6 & 0.1 & 0.2 & 电力\\\hline
    0.4 & 0.5 & 0.2 & 钢铁\\\hline
\end{tabular}
\end{document}

内容讲解
1.\begin{tabular}{aligns...} ... \end{tabular}限定表格的环境, 该环境可用于任何模式(paragraph/LR/math mode). aligns可使用如下内容:
    l - 当前列的每一行左对齐
    c - 当前列的每一行中间对齐
    r - 当前列的每一行右对齐
    | - 列之间的分隔线或左/右侧边线, 该垂直线占据整个深度
    @{text} - 使用指定字符text作为列之间的分割线或左/右侧边线
        text为\hspace{width}时, 使用指定长度空白作为当前列分隔符
        text为<null>时, 列之间无分隔符
        text为\extracolsep{width}, 使用指定长度空白作为之后所有的列分隔符, 适用于后续所有列分隔, 直到再次遇到其他\extracolsep{width}, 被新值覆盖
    p{width} - 设置列为指定宽度, 内容垂直top对齐
    m{width} - 设置列为指定宽度, 内容垂直居中对齐. 包含在array宏包中
    b{width} - 设置列为指定宽度, 内容垂直bottom对齐. 包含在array宏包中
    *{num}{cols} - 指定num个连续列都采用cols指定格式
    >{} - 应用于后一列. 包含在array宏包中
    <{} - 应用于前一列. 包含在array宏包中
    例子: 指定一列宽度为3cm, 并指定垂直对齐方式为top, 水平对齐方式为居中. \begin{tabular}{>{\centering}p{3cm}}. 左对齐和右对齐格式raggedright/raggedleft
** 观察示例2, 最后一列之前的>{}内需要使用\arraybackslash(放在\centering等等之后)


2.\hline用于作水平宽度为所有列宽度之和的水平线, 必须位于表格第一行或紧跟在\\后

3.&代表列与列之间的正文分隔

4.\\代表换行

5.\cline{i-j}用于作水平铺满指定列的水平线, 必须位于表格第一行或紧跟在\\后

6.\vline可以在单独一行内作垂直线

7.\tabcolsep配置列之间的间隔. 配置示例: \setlength{\tabcolsep}{1cm}

8.\arrayrulewidth配置线条宽度. 配置示例: \setlength{\arrayrulewidth}{2pt}. 线条列表: | \vline \hline \cline

9.\doublerulesep配置两个紧邻线条的距离. 配置示例: \setlength{\doublerulesep}{3pt}

10.\arraystretch配置行之间距离的系数(过低会造成表格内的内容与边框过近). 配置示例: \renewcommand{\arraystretch}{1.3}

11.\columncolor[modle]{model-spec}[left_margin][right_margin]用于指定表格的列背景色, model为颜色模式, 列表: gray/rgb/cymk; model-spec用于指定颜色模式参数, 当model未提供, 为提供的颜色名称; left_margin代表列内容左边界延伸宽度, 默认为\tabcolsep宽度; right_margin代表列内容右边界延伸宽度, 默认为left_margin内容. \columncolor只能用于tabular/array的aligns参数列表的>{}格式中. 包含在colortbl宏包中, 并依赖于xcolor宏包

12.\rawcolor[model]{model-spec}[left_margin][right_margin]参数与\columncolor一致, 用于指定表格的行背景色. 用于表格一行的起始位置. 包含在colortbl宏包中, 并依赖于xcolor宏包

13.\cellcolor[model]{model-spec}用于指定表格单元格的背景色. 包含在colortbl宏包中, 并依赖于xcolor宏包

14.tabular不可跨页

15.tabular适用于math mode/paragraph mode/LR mode所有模式

16.tabular不可内嵌float环境


tabbing与tabular的不同点:
1.tabbing只能用于paragraph mode; tabular可用于所有模式

2.tabbing可以跨页; tabular不可跨页, 需借助table

3.tabbing需设定列的锚点和跨列位置; tabular自动检测列的宽度

4.tabbing从环境中间改变格式更为容易



三、Demo(示例)03 -- span column of tabular
\documentclass{article}
\begin{document}
\begin{tabular}{l|l|l|l}
    \hline
    name & sex & item & score\\
    \hline
    peter & \multicolumn{2}{r|}{null} & 99\\
    david & male & english & 76\\
    steven & male & english & 59\\
    \hline
\end{tabular}
\end{document}

内容讲解
1.\multicolumn{num}{align}{content}用于合并多列, num为合并的列数; align为合并后内容的水平对齐方式, 可选为l/c/r, 合并列右侧不使用表格的列分隔符, |为手动添加到其后的列分隔符; content为合并单元格的内容

2.\multicolumn也可用于单独cell对齐方式设置



四、Demo04 - multirow
\documentclass{article}
\usepackage{multirow}
\begin{document}
\begin{tabular}{l|l|l|l}
    \hline
    name & sex & item & \multirow{4}*{score}\\
    \cline{1-3}
    peter & male & math &\\
    \cline{1-3}
    david & male & english &\\
    \cline{1-3}
    steven & male & english &\\
    \hline
\end{tabular}
\end{document}

内容讲解
1.\multirow[<upos>]{<nrows>}[<bigstruts>]{<width>}[<vmove>]{<text>}用于合并多行. 包含在multirow宏包中. 参数列表如下:
    upos - 内容在多行块中的垂直位置. 可选列表: t/c(默认)/b
    nrows - 需要合并的行数
    bigstruts - 配合\bigstrut指令使用, 代表增加行高或/和行深后的合并文字归位. \bigstrut包含在bigstrut宏包中, 指令及对应消耗的bigstrut列表如下:
        \bigstrut - 2, 增加行高和行深
        \bigstrut[<x>] - 1, 代表增加行高(x=t)或行深(x=b)
    width - 指定合并行的宽度. 可选格式:
        <N> - 直接使用数字和单位指定宽度, 正文处于段落模式可换行
        * - 根据文字长度自动确定宽度, 正文处于左右模式不可换行
    vmove - 垂直移动合并文字. 正数代表向上移, 负数代表向下移
    text - 合并行的正文内容
** 合并行数原理: 保留一行数据, 该列的其他行内容留空
    


五、Demo(示例)05 -- cross-reference
\documentclass{article}
\begin{document}
\begin{table}
\begin{tabular}{l l l l}
    \hline
    name & sex & age & symptom\\
    \hline
    david & male & 21 & positive\\
    peter & male & 25 & negative\\
    steven & male & 30 & negative\\
    lucy & female & 27 & negative\\
    \hline
\end{tabular}
\caption{detect result}
\label{tab:detect}
\end{table}
we get a detect result, please reference table \ref{tab:detect} in page \pageref{tab:detect}
\end{document}

内容讲解
1.\label{}用于对表格编号做名称标记. 在figure/table中, \label需要放置在\caption后

2.\ref{}用于引用指定名称的标记的编号

3.\pageref{}用于引用指定名称标记的页码



六、Demo(示例)06 - multi-page table
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{texnames}
\usepackage{amssymb}
\usepackage{longtable}
\begin{document}
\begin{longtable}{p{8mm}@{\hspace{1ex}}l@{\hspace{1ex}}l@{\hspace{1ex}}l@{\hspace{1ex}}l@{\hspace{1ex}}l}
	\caption{数学普通符号}\\
	\hline
	符号 & 代码 & 符号 & 代码 & 符号 & 代码\\
	\hline
	$\hbar$ & \textbackslash hbar & $\imath$ & \textbackslash imath & $\jmath$ & \textbackslash jmath\\
	$\ell$ & \textbackslash ell & $\wp$ & \textbackslash  wp & $\Re$ & \textbackslash  Re\\
	$\Im$ & \textbackslash  Im & $\partial$ & \textbackslash  partial & $\infty$ & \textbackslash infty\\
 	$\prime$ & \textbackslash prime & $\emptyset$ & \textbackslash emptyset & $\nabla$ & \textbackslash  nabla\\
	$\diagup$ & \textbackslash  diagup & $\Game$ & \textbackslash  Game & $\diagdown$ & \textbackslash  diagdown \\
	$\Bbbk$ & \textbackslash  Bbbk & $\because$ & \textbackslash  because & $\therefore$ & \textbackslash  therefore\\
	\hline
\begin{minipage}{\textwidth}
\footnotetext[1]{\textbackslash  backslash同时也是长度可变的定界符，并有一个同形的二元运算符\textbackslash  setminus}
\footnotetext[99]{从\textbackslash  backprime开始是\AMS 符号, 包含在amssymb宏包中}
\end{minipage}
\end{longtable}
\end{document}

内容讲解
1.longtable宏包拥有与tabular类似的格式, 并且与table拥有相同的\caption/counter, 并且\listoftables也会生成目录item

2.caption可位于表格前(需加\\)或表格后(表格内容结束后必须立即接\caption指令)

3.第一列的宽度默认比较高, 建议使用p{width}指定第一列宽度



七、Demo07 - graphic in table
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{adjustbox}
\usepackage{array}
\usepackage{float}
\usepackage{graphicx}
\usepackage{longtable}
\graphicspath{{./case}}
\begin{document}
\begin{longtable}{>{\raggedright}m{0.35\textwidth}>{\raggedright}m{0.35\textwidth}>{\centering\arraybackslash}m{0.25\textwidth}}
\hline
变换名称 & 变换图像 & 标准矩阵\\\hline
旋转 & \raisebox{0pt}[4.2cm][0.2cm]{\includegraphics[totalheight=4cm]{rotate}} & $\left[\begin{array}{r r}\cos\varphi & -\sin\varphi\\\sin\varphi & \cos\varphi\end{array}\right]$\\\hline
关于$x$轴对称 & \includegraphics{symmetry_01} & $\left[\begin{array}{r r} 1 & 0\\ 0 & -1\end{array}\right]$\\\hline
关于$y$轴对称 & \includegraphics{symmetry_02} & $\left[\begin{array}{r r} -1 & 0\\ 0 & 1\end{array}\right]$\\\hline
关于直线$y=x$对称 & \includegraphics{symmetry_03} & $\left[\begin{array}{r r} 0 & 1\\ 1 & 0\end{array}\right]$\\\hline
关于直线$y=-x$对称 & \includegraphics{symmetry_04} & $\left[\begin{array}{r r} 0 & -1\\ -1 & 0\end{array}\right]$\\\hline
关于原点对称 & \includegraphics{symmetry_05} & $\left[\begin{array}{r r} -1 & 0\\ 0 & -1\end{array}\right]$\\\hline
\caption{线性变换一览}
\end{longtable}
\end{document}

内容讲解
1.\raisebox{0pt}[4.2cm][0.2cm]{\includegraphics[totalheight=4cm]{rotate}}
    设置raisebox, 不进行上下移动, 只设置行高(4.2cm)和行深(0.2cm), 图片的总高度为4cm(图片的行高+行深)
    图片的最底部(非基准线)与外部raisebox盒子的基准线(该线以下为行深, 以上为行高)重合
    raisebox盒子的行高-图片总高度=图像距离顶部边框距离
    raisebox盒子的行深=图像距离底部边框距离
