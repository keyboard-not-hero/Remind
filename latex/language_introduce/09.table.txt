一、Demo(示例)01 -- tabular
示例1
\documentclass{article}
\begin{document}
\begin{tabular}{l|l|l l}
    \hline
    name & sex & item & score\\
    \cline{1-2}
    peter & male & math & 99\\
    david & male & english & 76\\
    steven & male & english & 59\\
    \hline
\end{tabular}
\end{document}

示例2
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{bigstrut}
\usepackage{multirow}
\usepackage{array}
\begin{document}
\begin{tabular}{>{\centering}p{0.2\textwidth}|>{\centering}p{0.2\textwidth}|>{\centering}p{0.2\textwidth}|>{\centering\arraybackslash}p{0.2\textwidth}}
    \hline
    \multicolumn{3}{c|}{部门的产出分配} & \multirow{2}*{采购部门}\\\cline{1-3}
    煤炭 & 电力  & 钢铁 & \\\hline
    0.0 & 0.4 & 0.6 & 煤炭\\\hline
    0.6 & 0.1 & 0.2 & 电力\\\hline
    0.4 & 0.5 & 0.2 & 钢铁\\\hline
\end{tabular}
\end{document}

内容讲解
1.\begin{tabular}[vertical_align]{column_format} ... \end{tabular}限定表格的环境, 该环境可用于任何模式(paragraph/LR/math mode). 参数列表如下:
    vertical_align
        表格与同一行外部内容的垂直对齐方式, 可选列表: t/c(默认)/b
    column_format
        表格内每一列的格式. 内容如下:
            l - 当前列的每一行左对齐
            c - 当前列的每一行居中对齐
            r - 当前列的每一行右对齐
            | - 列之间的分隔线或左/右侧边线, 该垂直线占据整个深度
	    || - 列之间的或侧边线使用两条分隔线, 可使用\doublerulesep设置两条分割线距离, 如: \setlength{\doublerulesep}{6pt}, 默认为2pt
            @{text} - 使用指定字符text作为列之间的分割线或左/右侧边线
                text为\hspace{width}时, 使用指定长度空白作为当前列分隔符
                text为<null>时, 列之间无分隔符
                text为\extracolsep{width}, 使用指定长度空白作为之后所有的列分隔符, 适用于后续所有列分隔, 直到再次遇到其他\extracolsep{width}, 被新值覆盖
            *{num}{cols} - 指定num个连续列都采用cols格式指定
            p{width} - 设置列为指定宽度, 内容水平方向左对齐, 垂直方向top对齐
            m{width} - 设置列为指定宽度, 内容水平方向左对齐, 垂直居中对齐. 包含在array宏包中
            b{width} - 设置列为指定宽度, 内容水平方向左对齐, 垂直方向bottom对齐. 包含在array宏包中
            >{} - 应用于后一列. 包含在array宏包中
            <{} - 应用于前一列. 包含在array宏包中
	    !{text} - 类似于@{text}, 但不删除原有的分隔空间. 包含在array宏包中
            例子: 指定一列宽度为3cm, 并指定垂直对齐方式为top, 水平对齐方式为居中. \begin{tabular}{>{\centering}p{3cm}}. 左对齐和右对齐格式raggedright/raggedleft
        ** 观察示例2, 由于水平方向对齐指令会影响表格环境对换行指令\\的处理, 所以需要在>{}内使用\arraybackslash(放在centering/raggedright/raggedleft之后)

2.&代表列与列之间的正文分隔

3.\\代表换行

4.\hline用于作水平宽度为所有列宽度之和的水平线, 必须位于表格第一行或紧跟在\\后

5.\cline{i-j}用于作水平铺满指定列的水平线, 必须位于表格第一行或紧跟在\\后

6.\vline可以在单独一行内作垂直线

7.设定表格属性
1)\arrayrulewidth
    配置数组边框宽度. 格式: \setlength{\arrayrulewidth}{2pt}. 默认为0.4pt

2)\doublerulesep
    双表格线的间距. 格式: \setlength{\doublerulesep}{3pt}. 默认为2pt

3)\arraystretch
    配置表格上下单元的距离系数. 格式: \renewcommand{\arraystretch}{1.3}. 默认为1

4)\extrarowheight
    对表格单元额外增加的高度(深度不变). 格式: \setlength{\extrarowheight}{2pt}. 默认为0pt

5)\tabcolsep
    两列的间隔距离/2. 格式: \setlength{\tabcolsep}{1cm}. 默认为6pt

8.newcolumntype{name}[args_num]{column_format}
    定义新的列格式. 列表如下:
        name - 列格式的名称, 该名称只能为一个字母
	args_num - 新名称可以使用的参数数量. 默认为0
	column_format - 列格式, 参考tabular环境的column_format参数. #1代表名称第一个参数的值, #2代表第二个, 以此类推

9.tabular特性
1)tabular作为字符盒子, 不可跨页

2)tabular适用于math mode/paragraph mode/LR mode所有模式

3)tabular可嵌套

4)tabular不可内嵌float环境



二、Demo(示例)02 -- span column of table
\documentclass{article}
\begin{document}
\begin{tabular}{l|l|l|l}
    \hline
    name & sex & item & score\\
    \hline
    peter & \multicolumn{2}{r|}{null} & 99\\
    david & male & english & 76\\
    steven & male & english & 59\\
    \hline
\end{tabular}
\end{document}

内容讲解
1.\multicolumn{num}{align}{content}用于合并多列, 参数列表如下:
    num - 合并的列数
    align - 合并列的格式. 内容如下:
        l - 当前列的每一行左对齐
        c - 当前列的每一行居中对齐
        r - 当前列的每一行右对齐
        | - 左/右侧边线, 该垂直线占据整个深度
        || - 侧边线使用两条分隔线, 可使用\doublerulesep设置两条分割线距离, 如: \setlength{\doublerulesep}{6pt}, 默认为2pt
        @{text} - 使用指定字符text作为左/右侧边线
            text为\hspace{width}时, 使用指定长度空白作为边线
            text为<null>时, 无左/右侧边线
        p{width} - 设置列为指定宽度, 内容水平方向左对齐, 垂直方向top对齐
        m{width} - 设置列为指定宽度, 内容水平方向左对齐, 垂直居中对齐. 包含在array宏包中
        b{width} - 设置列为指定宽度, 内容水平方向左对齐, 垂直方向bottom对齐. 包含在array宏包中
        >{} - 应用于后一列. 包含在array宏包中
        <{} - 应用于前一列. 包含在array宏包中
    content - 合并单元格的内容

2.\multicolumn也可用于单个cell对齐方式设置



三、Demo03 - span row of table
示例1 - multirow初探
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{multirow}
\usepackage{bigstrut}
\renewcommand{\multirowsetup}{\centering}
\begin{document}
\begin{tabular}{|c|c|c|c|}
    \hline
    Code & Subcode\\
    \hline
    \multirow{3}*{0} & 0\\
    \cline{2-2}
     & 1\\
    \cline{2-2}
     & 2\\
    \hline
     & 0\\
    \cline{2-2}
    \multirow{-2}*{1} & 1\\
    \hline
\end{tabular}
\end{document}

示例2 - bigstrut的使用
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{multirow}
\usepackage{bigstrut}
\usepackage{array}
\renewcommand{\multirowsetup}{\centering}
\setlength{\bigstrutjot}{10pt}
\begin{document}
\begin{tabular}{|c|c|}
    \hline
        \multirow{3}[t 2]{*}{TOP} & T \bigstrut[t]\\
    \cline{2-2}
        & X \bigstrut[t]\\
    \cline{2-2}
        & B\\
    \hline
\end{tabular}
\end{document}


内容讲解
1.\multirow[<upos>]{<nrows>}[<bigstruts>]{<width>}[<vmove>]{<text>}用于合并多行. 包含在multirow宏包中. 参数列表如下:
    upos - 内容在多行块中的垂直位置. 可选列表: t/c(默认)/b
    nrows - 需要合并的行数. 如果为正数, 合并当前行和之后的行; 如果为负数, 合并当前行和之前的行
    bigstruts - 配合\bigstrut指令使用, 代表增加行高或/和行深后的合并文字归位. \bigstrut包含在bigstrut宏包中, 列表如下:
        t <num> - 只考虑使用的num个\bigstrut[t]指令
        b <num> - 只考虑使用的num个\bigstrut[b]指令
    width - 指定合并行的宽度. 可选格式:
        <N> - 直接使用数字和单位指定宽度, 此时正文处于段落模式(可换行)
        * - 根据文字长度自动确定宽度, 此时正文处于左右模式(不可换行)
        = - 使用合并前该列的宽度, 此时正文处于段落模式(可换行)
    vmove - 垂直移动合并文字. 正数代表向上移, 负数代表向下移
    text - 合并行的正文内容
    ** 合并行数原理: 保留一行数据, 该列的其他行内容留空

2.\bigstrut[vertical_align]
    增加行高或行深, 放置于\\之前的任何地方. 参数如下:
        vertical_align - 在指定位置增加垂直距离. 可选列表:
	    t - 增加行高
	    b - 增加行深
	    ** 默认增加行高和行深

3.\renewcommand{\multirowsetup}{\centering}
    设置合并行的内容在水平方向居中对齐. 默认左对齐(raggedright)

4.\setlength{\bigstrutjot}{10pt}
代表增加的行高/行深高度, 默认为2pt



四、Demo04 - combine multirow and multicolumn
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{multirow}
\begin{document}
\begin{tabular}{|c|c|c|c|c|}
\hline
\multicolumn{2}{|c|}{\multirow{2}*{各年级不同科目平均分}} & \multicolumn{3}{c|}{科目}\\
\cline{3-5}
 \multicolumn{2}{|c|}{}  & 语文 & 数学 & 英语\\
\hline
\multirow{3}*{年级} & 一年级 & 85 & 93 & 96\\
 & 二年级 & 83 & 95 & 86\\
 & 三年级 & 87 & 78 & 92\\
\hline
\end{tabular}
\end{document}

内容讲解
1.\multicolumn{2}{|c|}{\multirow{2}*{各年级不同科目平均分}}
    嵌套合并行与列时, 将\multirow嵌套在\multicolumn内部, 并且之后的行需要使用\multicolumn{columns}{align}{}进行行占位
    ** 引用地址: https://tex.stackexchange.com/questions/516833/how-to-combine-multirow-and-multicolumn-in-simplest-example



五、Demo(示例)05 - multi-page table
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{texnames}
\usepackage{amssymb}
\usepackage{longtable}
\begin{document}
\begin{longtable}{p{8mm}@{\hspace{1ex}}l@{\hspace{1ex}}l@{\hspace{1ex}}l@{\hspace{1ex}}l@{\hspace{1ex}}l}
	\caption{数学普通符号}\\
	\hline
	符号 & 代码 & 符号 & 代码 & 符号 & 代码\\
	\hline
	$\hbar$ & \textbackslash hbar & $\imath$ & \textbackslash imath & $\jmath$ & \textbackslash jmath\\
	$\ell$ & \textbackslash ell & $\wp$ & \textbackslash  wp & $\Re$ & \textbackslash  Re\\
	$\Im$ & \textbackslash  Im & $\partial$ & \textbackslash  partial & $\infty$ & \textbackslash infty\\
 	$\prime$ & \textbackslash prime & $\emptyset$ & \textbackslash emptyset & $\nabla$ & \textbackslash  nabla\\
	$\diagup$ & \textbackslash  diagup & $\Game$ & \textbackslash  Game & $\diagdown$ & \textbackslash  diagdown \\
	$\Bbbk$ & \textbackslash  Bbbk & $\because$ & \textbackslash  because & $\therefore$ & \textbackslash  therefore\\
	\hline
\begin{minipage}{\textwidth}
\footnotetext[1]{\textbackslash  backslash同时也是长度可变的定界符，并有一个同形的二元运算符\textbackslash  setminus}
\footnotetext[99]{从\textbackslash  backprime开始是\AMS 符号, 包含在amssymb宏包中}
\end{minipage}
\end{longtable}
\end{document}

内容讲解
1.\begin{longtable}[align]{column_format}
...
\end{longtable}
    longtable为可跨页的表格. 类似于tabular, 也拥有table的浮动特性(自动换新行), 并且与table使用相同的计数器, 包含在longtab宏包中. 参数列表如下:
        align - 表格在页面的位置. 列表如下: l/c/r
	column_format - 列的格式, 与tabular一直, 参考tabular

2.\caption{title}
    表格标题, 可位于表格第一行(尾部需加\\)或最后一行

\caption*{title}
    不带表格号码的标题

\LTcapwidth
    标题宽度, 默认为4in. 格式: \setlength{\LTcapwidth}{2in}
    
3.第一列的宽度默认比较高, 建议使用p{width}指定第一列宽度



六、Demo(示例)06 -- cross-reference
\documentclass{article}
\begin{document}
\begin{table}
\begin{tabular}{l l l l}
    \hline
    name & sex & age & symptom\\
    \hline
    david & male & 21 & positive\\
    peter & male & 25 & negative\\
    steven & male & 30 & negative\\
    lucy & female & 27 & negative\\
    \hline
\end{tabular}
\caption{detect result}
\label{tab:detect}
\end{table}
we get a detect result, please reference table \ref{tab:detect} in page \pageref{tab:detect}
\end{document}

内容讲解
1.\label{}用于对表格编号做名称标记. 在figure/table中, \label需要放置在\caption后

2.\ref{}用于引用指定名称的标记的编号

3.\pageref{}用于引用指定名称标记的页码



七、Demo07 - graphic in table
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{adjustbox}
\usepackage{array}
\usepackage{float}
\usepackage{graphicx}
\usepackage{longtable}
\graphicspath{{./case}}
\begin{document}
\begin{longtable}{>{\raggedright}m{0.35\textwidth}>{\raggedright}m{0.35\textwidth}>{\centering\arraybackslash}m{0.25\textwidth}}
\hline
变换名称 & 变换图像 & 标准矩阵\\\hline
旋转 & \raisebox{0pt}[4.2cm][0.2cm]{\includegraphics[totalheight=4cm]{rotate}} & $\left[\begin{array}{r r}\cos\varphi & -\sin\varphi\\\sin\varphi & \cos\varphi\end{array}\right]$\\\hline
关于$x$轴对称 & \includegraphics{symmetry_01} & $\left[\begin{array}{r r} 1 & 0\\ 0 & -1\end{array}\right]$\\\hline
关于$y$轴对称 & \includegraphics{symmetry_02} & $\left[\begin{array}{r r} -1 & 0\\ 0 & 1\end{array}\right]$\\\hline
关于直线$y=x$对称 & \includegraphics{symmetry_03} & $\left[\begin{array}{r r} 0 & 1\\ 1 & 0\end{array}\right]$\\\hline
关于直线$y=-x$对称 & \includegraphics{symmetry_04} & $\left[\begin{array}{r r} 0 & -1\\ -1 & 0\end{array}\right]$\\\hline
关于原点对称 & \includegraphics{symmetry_05} & $\left[\begin{array}{r r} -1 & 0\\ 0 & -1\end{array}\right]$\\\hline
\caption{线性变换一览}
\end{longtable}
\end{document}

内容讲解
1.\raisebox{0pt}[4.2cm][0.2cm]{\includegraphics[totalheight=4cm]{rotate}}
    设置raisebox, 不进行上下移动, 只设置行高(4.2cm)和行深(0.2cm), 图片的总高度为4cm(图片的行高+行深)
    图片的最底部(非基准线)与外部raisebox盒子的基准线(该线以下为行深, 以上为行高)重合
    raisebox盒子的行高-图片总高度=图像距离顶部边框距离
    raisebox盒子的行深=图像距离底部边框距离



八、Demo08 - 外部文字与表格第一行内容对齐
示例1
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\begin{document}
表格
\begin{tabular}[t]{|c|}
hline
11\\
22\\\hline
\end{tabular}
\end{document}

示例2
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{array}
\begin{document}
表格
\begin{tabular}[t]{|c|}
\firsthline
11\\
22\\\hline
\end{tabular}
\end{document}

内容讲解
1.当表格与外部文字顶部对齐时, 表格的上边框与外部文字对齐, 如示例1, 并且我们想要的效果
解决方案:
将第一行之前的\hline替换为\firsthline, 此时表格第一行内容与外部文字顶部对齐
\firsthline指令包含在array宏包中

2.将表格与外部文字底部对齐, 可使用\lasthline替换最后一个\hline
\lasthline指令包含在array宏包中



九、Demo09 - width of vertical/horizontal line
示例1
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{array}
\begin{document}
\begin{tabular}{!{\vrule width 3pt}r|r|}
1 & 2\\
3 & 4
\end{tabular}
\end{document}

示例2
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{booktabs}
\begin{document}
\begin{tabular}{l c r}
\toprule
name & sex & score\\
\cmidrule{1-2}
peter & male & 98\\
\midrule
lucy & female & 79\\
\midrule
lily & female & 99\\
\midrule
david & male & 65\\
\bottomrule
\end{tabular}
\end{document}

内容讲解
1. !{\vrule width 3pt}
    设置列的分割线, 并且设置宽度

2.水平分割线宏包booktabs, 提供的水平分割线属性指令如下:
1)\toprule[width]
    表格顶部水平线

2)\midrule[width]
    表格中间水平线(非顶部和底部), 两个\midrule使用\doublerulesep分隔. \doublerulesep设置格式: \setlength{\doublerulesep}{2pt}

3)\bottomrule[width]
    表格底部水平线

4)\heavyrulewidth
    设置顶部和底部水平线的默认宽度. 格式: \setlength{\heavyrulewidth}{2pt}

5)\lightrulewidth
    设置中间水平线的默认宽度. 格式: \setlength{\lightrulewidth}{2pt}

6)\cmidrule[line_width](position{trim_width}){i-j}
    限定指定列的中间水平线. 参数列表如下:
        line_width - 线条宽度
	position - 从线条指定位置进行截取, 可选列表: l/r. 当多次使用l和r时, 只有最后一个l和r有效. 如: (lrrlr{0.75em})与(lr{0.75em})效果一致
	trim_width - 截取宽度. 默认为\cmidrulekern指令的值, 该指令默认取值0.5em, 设置格式: \setlength{\cmidrulekern}{2pt}
	i-j - 指定水平覆盖的列

7)\cmidrulewidth
    设置指定列中间水平线的默认宽度. 格式: \setlength{\cmidrulewidth}{2pt}

8)\addlinespace[width]
    用于添加边框线与表格内容的距离

9)\defaultaddspace
    \addlinespace的默认距离. 格式: \setlength{\defaultaddspace}{2pt}

10)\morecmidrules
    用于分隔连续两个\cmidrule, 否则\cmidrule重合. 使用方法: \cmidrule\morecmidrules\cmidrule

11)\cmidrulesep
    连续两个\cmidrule的间隔. 格式: \setlength{\cmidrulesep}{2pt}



十、Demo10 - align with decimal point
\documentclass[UTF8,fontset=ubuntu]{ctexart}
\usepackage{multirow}
\usepackage{dcolumn}
\newcolumntype{M}[1]{D{.}{.}{#1}}
\begin{document}
\begin{tabular}{|l|M{-1}M{-1}M{-1}|M{10}|}
\hline
\multirow{2}{*}{营养素(克)} & \multicolumn{3}{c|}{每100克成分所含营养素} & \multicolumn{1}{>{\centering}p{0.33\textwidth}|}{\multirow{2}{*}{剑桥食谱每天供应量(克)}}\\
\cline{2-4}
 & \multicolumn{1}{>{\centering}p{0.16\textwidth}}{脱脂牛奶} & \multicolumn{1}{>{\centering}p{0.16\textwidth}}{大\quad 豆\quad 粉} & \multicolumn{1}{>{\centering}p{0.16\textwidth}|}{乳\qquad 清} &\\
\hline
蛋白质 & 36 & 51 & 13 & 33\\
碳水化合物 & 52 & 34 & 74 & 45\\
脂肪 & 0 & 7 & 1.1 & 3\\
\hline
\end{tabular}
\end{document}

内容讲解
1.\D{input_delimiter}{output_delimiter}{decimal_point_num}
    根据小数点对齐, 指令包含在dcolumn宏包中. 参数列表如下:
        input_delimiter - 识别输入分隔符
	output_delimiter - 输出分隔符
	decimal_point_num - 小数点位数. 为正数时, 小数点右侧保留指定小数位数的宽度; 为负数时, 小数点居中

2.使用小数点对齐的列, header需要使用\multicolumn{1}{align}{content}指定单元对齐格式
