## 架构概览:
{
    "log": {},
    "dns": {},
    "inbounds": [],
    "outbounds": [],
    "api": {},
    "routing": {},
    "policy": {},
    "transport": {},
    "stats": {},
    "reverse": {},
    "fakedns": [],
    "browserForwarder": {},
    "observatory": {}
}

## 详细配置
#1 日志配置
"log": {
    # 定义error记录日志等级
    # 日志等级列表:
    #     "Debug" - 最详细的信息
    #     "Info" - 运行时的状态信息
    #     "Warning" - 可能出现问题, 但不影响运行
    #     "Error" - 无法正常运行
    #     "None" - 不记录任何信息
    "loglevel": "info",

    # 访问日志输出地址, 默认为stdout
    # 输出格式列表:
    #     "none" - 不输出信息
    #     "" - 输出到stdout
    #     <string> - 字符串格式的路径
    "access": "/var/log/access.log",

    # 错误日志输出地址, 默认为stdout
    # 输出格式列表:
    #     "none" - 不输出信息
    #     "" - 输出到stdout
    #     <string> - 字符串格式的路径
    "error": "/var/log/error.log"
},




#2 内部DNS配置, 否则使用system的DNS配置
"dns": {},




#3 入向流量, 数组形式
"inbound": [{
    # 监听的IP地址, 默认为0.0.0.0
    "listen": "<IP>",
  

    # 监听端口
    # 端口类型:
    #     <number> - 具体的端口号
    #     "env:<VAR_ENV>" - 从环境变量读取端口值
    #     "<string>" - 具体数值, 开放一个端口; 数值范围, 参考allocate参数
    "port": <number>|<string>,

  
    # 入站传输协议
    # 支持的协议列表:
    # Dokodemo - 监听本地端口, 并且将其转发至指定服务器端口, 达到端口映射
    # HTTP - 使用HTTP协议. 没有加密, 适宜本机或局域网监听
    # SOCKS - socks5协议, 适宜本机或局域网监听
    # Shadowsocks - Shadowsocks兼容协议
    # Trojan - 需工作在TLS隧道中
    # VLESS - 无状态的轻量传输协议, 不自带加密, 需配合TLS
    # VMess - 加密传输协议, 依赖于系统时间, C/S的utc时间相差不能超过90s, 与时区无关
    "protocol": "<pro_name>",


    # 协议相关配置
    "settings": {
        # Dokodemo对应配置
        # 转发的目标IP, followRedirect为true时, 可忽略
        "address": "<ip>",
        # 转发的目标端口
        "port": <number>,
        # 可接收的流量类型, 默认为tcp
        "networks": "tcp" | "udp" | "tcp,udp",
        # 是否识别iptables转发而来的数据
        "followRedirect": true | false,
        # 用户等级
        "userLevel": <number>

        # HTTP配置
        # 没有传输加密, 适用于本机或局域网
        # 从客户端读取的超时限制, 0表示不限时, 默认为300
        "timeout": <number>,
        # 对连接进行账号验证, 留空不进行验证
        "accounts":[{
            "user": "david",
            "pass": "hatelily"
        },{
            "user": "tom",
            "pass": "lovelucy"
        }],
        # 是否转发请求, 而非代理, 设置不当容易造成死循环
        "allowTransparent": true | false,
        # 用户等级
        "userLevel": <number>

        # SOCKS对应配置
        # 没有传输加密, 适用于本机或局域网
        # 认证方式:
        #     "noauth" - 匿名方式
        #     "password" - 账号密码方式, 参考accounts参数
        "auth": "noauth",
        # auth参数为password时的账号密码数组
        "accounts": [{
            "user": "david",
            "pass": "hatelily"
        },{
            "user": "tom",
            "pass": "lovelucy"
        }],
        # 是否开启udp协议支持, 默认为false
        "udp": true | false,
        # 用户等级
        "userLevel": <number>
   
        # Shadowsocks对应配置
        # 密码加密方式
        # 加密方式列表:
        #     "none" - 服务器不验证密码
        #     "plain" - 不对密码进行加密
        #     "aes-128-gcm"
        #     "aes-256-gcm" 
        #     "chacha20-poly1305" 
        # 手机使用chacha20-poly1305可获得更好体验, 电脑使用aes-gcm体验更好(当有aes加速)
        # 查看电脑是否有aes加速:
        #     grep -m1 -o aes /proc/cpuinfo
        "method": "<string>",
        # 密码
        "password": "<string>",
        # 用户等级, 默认为0
        "level": <number>,
        # 可接收的入站流量类型
        # 类型列表:
        #     "tcp" - 只接受tcp流量, 默认值
        #     "udp" - 只接受udp流量
        #     "tcp,udp" - 只接受tcp和udp流量
        "network": "<string>"
        
        # Trojan配置
        "clients": [{
            # 密码
            "password": <string>,
            # 用户等级
            "level": <number>,
            # 邮箱, 用于区分不同用户
            "email": <string>
        }],

        # VLESS配置
        # VLESS没有自带加密, 必须使用TLS
        # VLESS不依赖于系统时间, 同样使用UUID, 但不需要alterId
        "clients": [{
            "id": "<UUID>",
            # 用户等级
            "level": <number>,
            # 邮箱, 用于区分不同用户
            "email": <string>
        }],
        # 解密方式(不能留空), 该字段用于以后添加的加密方式
        "decryption": "none"

        # VMess对应配置
        # VMess依赖于系统时间, C/S误差不能超过90s, 与时区无关
        # 服务器认证用户
        "clients": [{
            "id": "<UUID>",
            # v4.28.1版本之后必须设置为0, 以启动VMess AEAD
            "alterId": <number>,
            # 用户等级
            "level": <number>,
            # 邮箱, 用于区分不同用户
            "email": <string>
        }],
        # 是否禁止客户端指定不安全的加密方式, 默认为false
        # 不安全加密列表: 
        #     "none"/"aes-128/cfb"
        "disableInsecureEncryption": false

    },

    # stream配置
    "streamSettings": {
        # 数据流使用的网络类型, 默认为tcp. 列表如下:
        #     "tcp"/"kcp"/"ws"/"http"/"domainsocket"/"quic"/"grpc"
        "network": "<string>",
        # 是否启用传输层加密, 由客户端指定, 服务器自适应, 默认为none
        # 列表:
        #     "none"/"tls"
        "security": "none",
        # TLS的详细配置
        "wsSettings": {
            # WebSocket使用的HTTP协议路径, 默认值为"/"
            "path": <string>,
            # 自定义HTTP header
            "headers":{
                "Host": <string>,
                ...
            }
        }
    },

    # 当前入站连接的tag, 用于定位
    "tag": <string>,
  
    # 端口分配策略
    "allocate": {
        # 端口分配策略, 列表如下:
        #     "always" - 总是分配port指定的所有端口
        #     "random" - 每间隔refresh时间, 在port范围内选取concurrency个端口来进行监听
        "strategy": "always",

        # 监听端口分配刷新间隔, 单位为min, 只有strategy为random时有效
        # 最小值为2, 建议值为5
        "refresh": <number>,

        # 同时开启的端口数量, 只有strategy为random时有效
        "concurrency": <number>
    }
}],


# 出向流量
"outbound": [{
    # 用于本机发送数据的IP地址
    "sendThrough": "0.0.0.0",      

    # 出站协议
    # 支持的出站协议列表:
    # Blackhole - 阻碍数据出站, 配合路由(routing), 可禁止访问某些网站
    # DNS - 拦截和转发DNS查询至指定DNS服务器(V2Ray 4.16+)
    # Freedom - 用来向任意网络发送TCP或UDP数据
    # HTTP - 使用HTTP协议. 未加密, 不适用于公网传输
    # SOCKS - 使用Socks协议, 兼容Socks 4/Socks 4a/Socks 5. 未加密, 不适用于公网传输
    # Shadowsocks - 与shadowsocks协议兼容
    # VLESS - 无状态的轻量传输协议
    # VMess - 加密传输协议. 依赖于系统时间, C/S的UTC时间误差必须在90s以内, 与时区无关
    "protocol": "<string>",


    # 协议相关配置
    "settings": {
        # Blackhole对应配置
        "response": {
            # 响应类型, 列表如下:
            #     "none" - 直接关闭连接, 默认值
            #     "http" - 返回HTTP 403
            "type": "none"
        }

        # DNS对应配置
        # 将DNS的传输层协议修改为指定协议, 未指定保持不变. 列表如下:
        #     "tcp"/"udp"
        "network": "tcp",
        # DNS服务器地址, 未指定保持不变
        "address": "1.1.1.1",
        # DNS服务器端口, 未指定保持不变
        "port": 53

        # Freedom配置
        # 当目标地址为域名时, 采取的操作, 列表如下:
        #     "AsIs" - 直接向该域名发出连接, 默认选项
        #     "UseIP" - 解析为IP后再发出连接, 当设置了sendThrough时, 根据该类型判断解析为IPv4或IPv6
        #     "UseIPv4" - 解析为IPv4后再发出连接
        #     "UseIPv6" - 解析为IPv6后再发出连接
        # 解析操作通过内建dns
        "domainStrategy": "AsIs",
        # 将入向流量目标地址进行重导向. 列表如下:
        #     "127.0.0.1:80" - 重导向IP和port
        #     "223.5.5.5:" - 重导向IP
        #     ":123" - 重导向port
        "redirect": "127.0.0.1:80",
        # 用户等级
        "userLevel": <number>

        # VLESS配置
        "vnext":[{
            # 服务器的IP或域名
            "address": <string>,
            # 服务器的端口
            "port": <number>,
            # 服务器认可的账号信息
            "users":[
                # UUID
                "id": <uuid>,
                # 加密方式(不能留空), 值为"none", 用于后续拓展
                "encryption": "none",
                # 用户等级
                "level": <number>
            ]
        }]

        # VMess配置
        "vnext":[{
            # 服务器的IP或域名
            "address": <string>,
            # 服务器的端口
            "port": <number>,
            # 服务器认可的账号信息
            "users":[
                # UUID
                "id": <uuid>,
                # alterId, 默认为0. v4.28.1之后建议设置为0
                "alterId": <number>,
                # 加密方式, 建议使用"auto". 可选列表:
                #     "aes-128-gcm" - 在有aes加速的pc上体验较好
                #     "chacha20-poly1305" - 在手机端体验较好
                #     "auto" - 自动根据架构选择, 默认值
                #     "none" - 不加密
                #     "zero" - 不加密, 也不进行消息认证
                "security": "auto",
                # 用户等级
                "level": <number>
            ]
        }]
    }
}],

# 路由
"routing": {},
  
# 本地策略权限相关(包含用户等级)
"policy": {},

# 反向代理
"reverse": {},

