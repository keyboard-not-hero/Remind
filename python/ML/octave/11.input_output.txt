output:
1.<content>
	打印内容

2.disp(s)
	打印内容, 并以'\n'结束. 
	s为变量名称时, 不打印变量名称
	
3.status = put(s)
	打印内容, 并返回状态码

4.printf(str, var1, var2, ...)
	类似于C语言的格式化字符串打印
	str可包含指定格式内容, 格式与变量var1, var2等对应
	格式列表:
		%d - 十进制整数
		%i - 十进制整数
		%% - '%'字符
		%o - 无符号八进制整数
		%u - 无符号十进制整数
		%x - 无符号十六进制整数(小写)
		%X - 无符号十六进制整数(大写)
		%c - 单个字符, 变量为字符串则进行多次迭代
		%s - 完整字符串
		%f - 小数
		%e - 科学计数法(小写)
		%E - 科学计数法(大写)
		%g - %e或%f, 根据情况选择最合适的格式
		%G - %E或%f, 根据情况选择最合适的格式
		
5.str = sprintf(str, var1, var2, ...)
	格式化字符串, 将该字符串返回
	参数格式参考printf

6.save(filename, var1, var2 ...)
    将指定的变量保存到文件中


input:
1.input(prompt)
	打印提示内容prompt, 等待输入

2.menu(title, opt1, ...)
	弹出菜单选项, 标题为title, 选项为opt1 ...

3.load(filename, options, var1, var2 ...)
    加载文件中的指定变量
    当未提供变量名时, 默认加载文件中所有变量
    options列表:
        -ascii: 文件只包含数据内容
        -binary: 文件为Octave二进制格式
        -hdf5: 文件为HDFS格式
        -mat: 文件为MATLAB version 6/7二进制格式
        -mat4-binary: 文件为MATLAB version 4二进制格式
        -text: 文件为Octave文本格式


底层I/O:
fd = fopen(name)
fd = fopen(name, mode)
fd = fopen(name, mode, arch)
fd = fopen(name, mode, arch, encoding)
	打开文件. 打开错误时返回-1
	name代表文件绝对路径和相对路径
	mode代表打开文件的权限, 列表如下:
		r - 只读. 默认选项
		w - 可写, 之前的内容被丢弃
		a - 可写(append)
		r+ - 可读和可写
		w+ - 可读和可写, 之前的内容被丢弃
		a+ - 可读和可写(append)
		t - 文本模式
		b - 二进制模式
		z - 读取gzip压缩文件, 必须配合b使用
	arch代表big-endian或little-endian模式, 列表如下:
		native/n - 跟随当前machine的endian模式
		ieee-be/b - IEEE big endian模式
		ieee-le/l - IEEE little endian模式
	encoding代表编码类型, 用于text模式
		
status = fputs(fd, str)
	将字符串内容写入文件描述符fd指定指定的文件中
	status为非负数代表成功操作

str = fgetl(fd)
str = fgetl(fd, len)
	获取指定长度的字符
	遇到下一个newline或EOF也会停止

str = fgets(fd)
str = fgets(fd, len)
	获取指定长度的字符
	遇到下一个newline或EOF也会停止
	与fgetl不同, 该函数会新增加一个newline

fclose(fd)
fclose("all")
	关闭指定fd
	all代表关闭所有通过fopen打开的文件fd
	

fclose(fd)
fclose("all")
	关闭指定fd
	all代表关闭所有通过fopen打开的文件fd
