selenium - 动态js解析第三方库，目前支持Python 2.7,3.5和以上版本
pip安装 - pip3 install selenium
导入库 - from selenium import webdriver

由于selenium python需要用到浏览器，因此需要额外下载浏览器驱动。驱动下载步骤：
1.下载响应版本驱动
google浏览器 - chromedriver
下载地址: https://sites.google.com/a/chromium.org/chromedriver/downloads

firefox浏览器 - geckodriver
下载地址: https://github.com/mozilla/geckodriver/releases

Edge浏览器 - WebDriver
下载地址: https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/

Safari - WebKit
下载地址: https://webkit.org/downloads/

2.将可执行驱动程序加入PATH路径

selenium.webdriver模块
function:
Chrome(executable_path="chromedriver", port=0, options=None, service_args=None, desired_capabilities=None, service_log_path=None, chrome_options=None, keep_alive=True) --> class chrome.webdriver.WebDriver(...)
    使用chromedriver程序打开浏览器，返回Webdriver对象
    executable_path - 可执行程序名称，假设已写入$PATH
    port - 监听的端口，当其为0时，随机分配空闲端口
	options - ChromeOptions对象实例
	desired_capabilities - dict格式的非浏览器功能。如：proxy
	service_log_path - log文件路径
	

class:
selenium.webdriver.chrome.webdriver.Webdriver
功能 - 通过向服务器发送指令，打到控制浏览器的目的

variable:
name
	浏览器名称

page_source
	html页面的源代码

title
	html页面的title标签内容

method:
add_cookie(cookie_dict)
	添加cookies到当前会话，dict中必须包含name和value两个key

back()
	在浏览器浏览跳转步骤中后退一步

close()
	关闭当前浏览器tab

find_element_by_id(id_name)
	根据tag的id属性值，返回WebElement对象

find_elements_by_id(id_name)
	根据tag的id属性值，返回WebElement对象的列表

find_element_by_name(name)
	根据tag的name属性值，返回WebElement对象

find_elements_by_name(name)
	根据tag的name属性值，返回WebElement对象的列表

find_element_by_tag_name(tag_name)
	根据tag名称，返回WebElement对象

find_elements_by_tag_name(tag_name)
	根据tag名称，返回WebElement对象的列表

find_element_by_class_name(class_name)
	根据tag的class属性值，返回WebElement对象

find_elements_by_class_name(class_name)
	根据tag的class属性值，返回WebElement对象的列表

forward()
	在浏览器浏览跳转步骤中后退一步

fullscreen_window()
	全屏当前窗口

get(url)
	在当前浏览器会话中，加载一个指定url的Web页面

get_cookie(name)
	获取指定key的cookie值

get_cookies()
	获取cookies，格式为dict

maximize_window()
	最大化窗口

minimize_window()
	最小化窗口

quit()
	关闭浏览器窗口所有tab

refresh()
	刷新当前页面


class:
selenium.webdriver.remote.webelement.WebElement
功能 - 对web的HTML元素进行模拟操作

variable:
text
	当前元素及其子元素下的正文文本内容

method:
clear()
	当element是文本框时，清除文本框内的内容

click()
	点击element

get_attribute(attr)
	获取元素属性对应的值

send_keys(*args)
	向element输入内容，args列表如下：
		str - 字符串值
		path - 文件路径字符串，取出文件内文本内容

submit()
	提交element


class:
selenium.webdriver.common.keys.Keys
功能 - 实现键盘按键映射

variable:
BACKSPACE
	删除键。'\ue003'

TAB
	制表符。'\ue004'

RETUEN
	回车键。'\ue006'

ENTER
	回车键。'\ue007'

SHIFT
	换挡键。'\ue008'

CONTROL
	控制键。'\ue009'

ALT
	替换键。'\ue00a'

原理：
python --> WebDriver(port) --> Browser


引用
1.selenium链接：https://selenium-python.readthedocs.io/
