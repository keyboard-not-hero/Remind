一、网站搭建
LNMP(Linux + Nginx + MariaDB + PHP)是基于Linux服务器动态网站的基本套件，部署wordpress之前我们需要先安装好套件环境。

1.安装Nginx:
[root@vultr ~]# vi /etc/yum.repos.d/nginx.repo
[nginx-stable]
name=nginx stable repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=1
enabled=1
gpgkey=https://nginx.org/keys/nginx_signing.key

[root@vultr ~]# yum install nginx

[root@vultr ~]# systemctl start nginx

[root@vultr ~]# systemctl enable nginx

# 防火墙设置
[root@vultr ~]# firewall-cmd --permanent --zone=public --add-service=http

[root@vultr ~]# firewall-cmd --permanent --zone=public --add-service=https

[root@vultr ~]# firewall-cmd --reload

[root@vultr ~]# firewall-cmd --list-services

[root@vultr ~]# curl -I 127.0.0.1
HTTP/1.1 200 OK
Server: nginx/1.22.0


2.安装MariaDB(10.1或以上版本):
# 添加新版本源：
[root@vultr ~]# vi /etc/yum.repos.d/MariaDB.repo
[mariadb]
name = MariaDB
baseurl = https://mirrors.gigenet.com/mariadb/yum/10.7/centos7-amd64
gpgkey=https://mirrors.gigenet.com/mariadb/yum/RPM-GPG-KEY-MariaDB
gpgcheck=1
其他版本参考: https://downloads.mariadb.org/mariadb/repositories/#mirror=nxtHost

[root@vultr ~]# yum install MariaDB-server MariaDB-client

[root@vultr ~]# systemctl start mariadb

[root@vultr ~]# systemctl enable mariadb

[root@vultr ~]# mariadb-secure-installation

# 防火墙设置
[root@vultr ~]# firewall-cmd --permanent --add-service=mysql

[root@vultr ~]# firewall-cmd --reload


3.安装php(7.4或以上版本):
# 添加remi源
[root@vultr ~]# yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm

# 安装php7.4
[root@vultr ~]# yum install yum-utils
[root@vultr ~]# yum-config-manager --enable remi-php74
[root@vultr ~]# yum install php php-devel php-fpm php-mysqlnd

# 启动php-fpm
[root@vultr ~]# systemctl start php-fpm

[root@vultr ~]# systemctl enable php-fpm


4.添加nginx对php支持
[root@vultr ~]# cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak

[root@vultr ~]# vi /etc/nginx/nginx.conf
server{
    location / {
        index index.php index.html index.htm;
    }
    location ~ .php$ {
        root /usr/share/nginx/html;   
        fastcgi_pass 127.0.0.1:9000; 
        fastcgi_index index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include fastcgi_params;  
    }
} 

[root@vultr nginx]# systemctl restart nginx

[root@vultr ~]# vi /usr/share/nginx/html/phpinfo.php
<?php
   echo phpinfo();
?>

**浏览器栏输入<server_ip>/phpinfo.php, 测试是否出现php欢迎界面



二、wordpress环境部署：
1.下载wordpress:
[root@vultr ~]# wget https://wordpress.org/latest.tar.gz

[root@vultr ~]# tar -zxvf latest.tar.gz -C /tmp

[root@vultr ~]# cd /tmp/wordpress && mv * /usr/share/nginx/html

2.修改/var/www/html目录所属(递归):
[root@vultr ~]# chown -R nginx:nginx /usr/share/nginx/html

3.创建数据库和账号:
[root@vultr ~]# mysql -u root -p

# 创建数据库
>create database wordpress;
#添加相关帐号并授权(语法：GRANT ALL PRIVILEGES ON database.table TO user@host IDENTIDIED BY passwd)

>GRANT ALL PRIVILEGES ON wordpress.* TO <user>@localhost IDENTIFIED BY <passwd>;

4.wordpress站点设置(与数据库连接):
(1)借助wordpress按步骤设置:
浏览器输入ip/wp-admin/setup-config.php，step by step进行设置

(2)复制wp-config-sample.php为wp-config.php, 修改以下内容:
define( 'DB_NAME', 'database_name_here' );

define( 'DB_USER', 'username_here' );

define( 'DB_PASSWORD', 'password_here' );

define( 'DB_HOST', 'localhost' );

define( 'DB_CHARSET', 'utf8' );

define( 'DB_COLLATE', '' );

define( 'AUTH_KEY',         'put your unique phrase here' );
define( 'SECURE_AUTH_KEY',  'put your unique phrase here' );
define( 'LOGGED_IN_KEY',    'put your unique phrase here' );
define( 'NONCE_KEY',        'put your unique phrase here' );
define( 'AUTH_SALT',        'put your unique phrase here' );
define( 'SECURE_AUTH_SALT', 'put your unique phrase here' );
define( 'LOGGED_IN_SALT',   'put your unique phrase here' );
define( 'NONCE_SALT',       'put your unique phrase here' );

(3)修改文件所属
chown nginx:nginx wp-config.php



三、域名解析
将域名指向IP地址，称为'A'记录


四、HTTP加密
部署HTTPS, 参考Remind/certbot/01.certificate_manage.txt


引用：
[1]mariadb源：https://downloads.mariadb.org/mariadb/repositories
[2]wordpress中文站点：https://cn.wordpress.org/txt-download/
